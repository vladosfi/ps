{"version":3,"sources":["./src/app/start/register/register.component.ts","./src/app/start/register/register.component.html","./src/app/start/start-routing.module.ts","./src/app/start/start.module.ts","./src/app/start/start.component.html","./src/app/start/start.component.ts"],"names":[],"mappings":"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","file":"start-start-module.js","sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { IUser } from '../../_interfaces/user';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { ToastService } from '../../_services/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n  user: IUser;\r\n  registerForm: FormGroup;\r\n  \r\n  constructor(\r\n    private authService: AuthService,\r\n    private toast: ToastService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.createRegisterForm();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.fb.group(\r\n      {\r\n        gender: ['male'],\r\n        username: ['', Validators.required],\r\n        knownAs: ['', Validators.required],\r\n        dateOfBirth: ['', Validators.required],\r\n        city: ['', Validators.required],\r\n        country: ['', Validators.required],\r\n        password: [\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.minLength(4),\r\n            Validators.maxLength(8),\r\n          ],\r\n        ],\r\n        confirmPassword: ['', Validators.required],\r\n      },\r\n      { validator: this.passwordMatchValidator }\r\n    );\r\n  }\r\n\r\n  passwordMatchValidator(g: FormGroup) {\r\n    return g.get('password').value === g.get('confirmPassword').value\r\n      ? null\r\n      : { mismatch: true };\r\n  }\r\n\r\n  register() {\r\n    if (this.registerForm.valid) {\r\n      this.user = Object.assign({}, this.registerForm.value);\r\n      this.authService.register(this.user).subscribe(\r\n        () => {\r\n          this.toast.success('Registration successful');\r\n        },\r\n        (error) => {\r\n          this.toast.error(error);\r\n        },\r\n        () => {\r\n          this.authService.login(this.user).subscribe(() => {\r\n            this.router.navigate(['/members']);\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n}\r\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\r\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\r\n  <hr />\r\n\r\n  <div class=\"form-group\">\r\n    <label class=\"control-label\" style=\"margin-right: 10px\">I am a: </label>\r\n    <label class=\"radio-inline\">\r\n      <input\r\n        class=\"mr-3\"\r\n        type=\"radio\"\r\n        value=\"male\"\r\n        formControlName=\"gender\"\r\n      />Male\r\n    </label>\r\n    <label class=\"radio-inline ml-3\">\r\n      <input\r\n        class=\"mr-3\"\r\n        type=\"radio\"\r\n        value=\"female\"\r\n        formControlName=\"gender\"\r\n      />Female\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input\r\n      type=\"text\"\r\n      [ngClass]=\"{\r\n        'is-invalid':\r\n          registerForm.get('username').errors &&\r\n          registerForm.get('username').touched\r\n      }\"\r\n      class=\"form-control\"\r\n      formControlName=\"username\"\r\n      placeholder=\"Username\"\r\n    />\r\n    <div class=\"invalid-feedback\">Please choose a username</div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input\r\n      [ngClass]=\"{\r\n        'is-invalid':\r\n          registerForm.get('knownAs').errors &&\r\n          registerForm.get('knownAs').touched\r\n      }\"\r\n      class=\"form-control\"\r\n      placeholder=\"Known as\"\r\n      formControlName=\"knownAs\"\r\n    />\r\n    <div\r\n      class=\"invalid-feedback\"\r\n      *ngIf=\"\r\n        registerForm.get('knownAs').touched &&\r\n        registerForm.get('knownAs').hasError('required')\r\n      \"\r\n    >\r\n      Known as is required\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input\r\n      [ngClass]=\"{\r\n        'is-invalid':\r\n          registerForm.get('dateOfBirth').errors &&\r\n          registerForm.get('dateOfBirth').touched\r\n      }\"\r\n      class=\"form-control\"\r\n      placeholder=\"Date of Birth\"\r\n      formControlName=\"dateOfBirth\"\r\n      type=\"text\"\r\n      bsDatepicker\r\n      [bsConfig]=\"{containerClass:'theme-dark-blue',dateInputFormat: 'DD/MM/YYYY'}\"\r\n      \r\n    />\r\n    <div\r\n      class=\"invalid-feedback\"\r\n      *ngIf=\"\r\n        registerForm.get('dateOfBirth').touched &&\r\n        registerForm.get('dateOfBirth').hasError('required')\r\n      \"\r\n    >\r\n      Date of Birth is required\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input\r\n      [ngClass]=\"{\r\n        'is-invalid':\r\n          registerForm.get('city').errors && registerForm.get('city').touched\r\n      }\"\r\n      class=\"form-control\"\r\n      placeholder=\"City\"\r\n      formControlName=\"city\"\r\n    />\r\n    <div\r\n      class=\"invalid-feedback\"\r\n      *ngIf=\"\r\n        registerForm.get('city').touched &&\r\n        registerForm.get('city').hasError('required')\r\n      \"\r\n    >\r\n      City is required\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input\r\n      [ngClass]=\"{\r\n        'is-invalid':\r\n          registerForm.get('country').errors &&\r\n          registerForm.get('country').touched\r\n      }\"\r\n      class=\"form-control\"\r\n      placeholder=\"Country\"\r\n      formControlName=\"country\"\r\n    />\r\n    <div\r\n      class=\"invalid-feedback\"\r\n      *ngIf=\"\r\n        registerForm.get('country').touched &&\r\n        registerForm.get('country').hasError('required')\r\n      \"\r\n    >\r\n      Country is required\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input\r\n    autocomplete=\"off\"\r\n      type=\"password\"\r\n      [ngClass]=\"{\r\n        'is-invalid':\r\n          registerForm.get('password').errors &&\r\n          registerForm.get('password').touched\r\n      }\"\r\n      class=\"form-control\"\r\n      formControlName=\"password\"\r\n      placeholder=\"Password\"\r\n    />\r\n    <div\r\n      class=\"invalid-feedback\"\r\n      *ngIf=\"\r\n        registerForm.get('password').hasError('required') &&\r\n        registerForm.get('password').touched\r\n      \"\r\n    >\r\n      Password is required\r\n    </div>\r\n    <div\r\n      class=\"invalid-feedback\"\r\n      *ngIf=\"\r\n        registerForm.get('password').hasError('minlength') &&\r\n        registerForm.get('password').touched\r\n      \"\r\n    >\r\n      Password must be at least 4 characters\r\n    </div>\r\n    <div\r\n      class=\"invalid-feedback\"\r\n      *ngIf=\"\r\n        registerForm.get('password').hasError('maxlength') &&\r\n        registerForm.get('password').touched\r\n      \"\r\n    >\r\n      Password cannot exceed 8 characters\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <input\r\n    autocomplete=\"off\"\r\n      [ngClass]=\"{\r\n        'is-invalid':\r\n          (registerForm.get('confirmPassword').errors &&\r\n            registerForm.get('confirmPassword').touched) ||\r\n          (registerForm.get('confirmPassword').touched &&\r\n            registerForm.hasError('mismatch'))\r\n      }\"\r\n      type=\"password\"\r\n      class=\"form-control\"\r\n      formControlName=\"confirmPassword\"\r\n      placeholder=\"Confirm Password\"\r\n    />\r\n    <div\r\n      class=\"invalid-feedback\"\r\n      *ngIf=\"\r\n        registerForm.get('confirmPassword').hasError('required') &&\r\n        registerForm.get('confirmPassword').touched\r\n      \"\r\n    >\r\n      Confirm Password is required\r\n    </div>\r\n    <div\r\n      class=\"invalid-feedback\"\r\n      *ngIf=\"\r\n        registerForm.hasError('mismatch') &&\r\n        registerForm.get('confirmPassword').touched\r\n      \"\r\n    >\r\n      Passwords must match\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group text-center\">\r\n    <button\r\n      class=\"btn btn-success\"\r\n      [disabled]=\"!registerForm.valid\"\r\n      type=\"submit\"\r\n    >\r\n      Register\r\n    </button>\r\n    <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">\r\n      Cancel\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { StartComponent } from './start.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: StartComponent,\r\n    }\r\n];\r\n\r\nexport const StartRoutingModule = RouterModule.forChild(routes);\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { StartComponent } from './start.component';\r\nimport { StartRoutingModule } from './start-routing.module';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    StartComponent,\r\n    RegisterComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule,\r\n    StartRoutingModule,\r\n  ],\r\n  providers: [\r\n  ]\r\n})\r\nexport class StartModule {\r\n  constructor() {\r\n    console.log('Lazily Loaded : LazyModule - Start');\r\n  }\r\n}","<div class=\"container mt-5\">\r\n\r\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\r\n    <h1>Registration Page!</h1>\r\n    <p class=\"lead\">Register a new User...</p>\r\n    <div class=\"text-center\">\r\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"registerToggle()\">Register</button>\r\n      <!-- <button class=\"btn btn-info btn-lg\" (click)=\"loginToggle()\">Login</button> -->\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"registerMode\" class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-4\">\r\n        <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\r\n      </div>\r\n    </div>\r\n  </div> \r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './start.component.html',\r\n  styleUrls: ['./start.component.css']\r\n})\r\nexport class StartComponent implements OnInit {\r\n  registerMode = false;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  \r\n  registerToggle() {\r\n    this.registerMode = true;\r\n  }\r\n\r\n  cancelRegisterMode(registerMode: boolean){\r\n    this.registerMode = registerMode;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}