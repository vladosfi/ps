{"version":3,"sources":["./src/app/paintings/thumb/thumb.component.ts","./src/app/paintings/thumb/thumb.component.html","./src/app/shared/components/loader/loader.component.html","./src/app/shared/components/loader/loader.component.ts","./src/app/_services/auth.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/_interceptors/loader-interceptor.ts","./src/environments/environment.ts","./src/app/_resolvers/paintings.resolver.ts","./src/app/_services/toast.service.ts","./src/app/core/footer/footer.component.ts","./src/app/core/footer/footer.component.html","./src/app/_resolvers/painting.resolver.ts","./src/app/paintings/painting-add/painting-add.component.ts","./src/app/paintings/painting-add/painting-add.component.html","./src/app/_interceptors/error.interceptor.ts","./src/app/paintings/painting-list/painting-list.component.ts","./src/app/paintings/painting-list/painting-list.component.html","./src/app/shared/shared.module.ts","./src/app/_guards/auth.guard.ts","./src/app/shared/components/image-uploader/image-uploader.component.ts","./src/app/shared/components/image-uploader/image-uploader.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/routes.ts","./src/app/shared/_service/modal-window.service.ts","./src/app/shared/decimal-numeric.directive.ts","./src/app/paintings/details/details.component.ts","./src/app/paintings/details/details.component.html","./src/app/_services/painting.service.ts","./src/app/shared/_service/image.service.ts","./src/app/_services/loader.service.ts","./src/app/core/core.module.ts","./src/app/core/nav/nav.component.ts","./src/app/core/nav/nav.component.html","./src/app/shared/components/text-editor/editor.component.ts","./src/app/shared/components/text-editor/editor.component.html","./src/app/paintings/image-editor/image-editor.component.ts","./src/app/paintings/image-editor/image-editor.component.html","./src/app/_resolvers/painting-edit.resolver.ts","./src/app/shared/components/input-name/input-name.component.html","./src/app/shared/components/input-name/input-name.component.ts","./src/app/_interfaces/pagination.ts","./src/app/paintings/edit/edit.component.ts","./src/app/paintings/edit/edit.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { IPainting } from 'src/app/_interfaces/painting';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-thumb',\r\n  templateUrl: './thumb.component.html',\r\n  styleUrls: ['./thumb.component.css']\r\n})\r\nexport class ThumbComponent implements OnInit {\r\n  @Input() paintingSource: IPainting;\r\n  localhost = environment.localhost;\r\n  \r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card mb-4 align-self-center \">\r\n  <!-- <a [routerLink]=\"['/paintings', paintingSource?.id]\"> -->\r\n  <div class=\"card-img-wrapper\">\r\n    <div class=\"frame\">\r\n    <img\r\n      class=\"card-img-top mx-auto d-block img-fluid\"\r\n      src=\"{{ localhost + paintingSource?.url }}/thumbnail/{{\r\n        paintingSource?.imageFileName\r\n      }}\"\r\n      alt=\"{{ paintingSource?.name }}\"\r\n    />\r\n    <!-- <div class=\"card-img-overlay\">\r\n      <h5 class=\"card-title\">{{ paintings }}</h5>\r\n    </div> -->\r\n    <ul class=\"list-inline painting-title animate text-center\">\r\n      <li class=\"list-inline-item center-title\">\r\n        {{ paintingSource?.name }}\r\n      </li>\r\n    </ul>\r\n    <!-- <ul class=\"list-inline like-icon animate text-center\">\r\n      <li class=\"list-inline-item\">\r\n        <button class=\"btn btn-primary\"><i class=\"fa fa-heart\"></i></button>\r\n      </li>\r\n    </ul> -->\r\n  </div>\r\n  </div>\r\n  <!-- </a> -->\r\n</div>\r\n","<div *ngIf=\"isLoading\" class=\"box-background\">\r\n  <div id=\"loader\">\r\n      <div id=\"shadow\"></div>\r\n      <div id=\"box\"></div>\r\n    </div>\r\n    <h6 class=\"loading\">Loading</h6>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { LoaderService } from 'src/app/_services/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.css']\r\n})\r\nexport class LoaderComponent implements OnInit {\r\n\r\n  @Input() isLoading: boolean;\r\n  \r\n  loading: boolean;\r\n\r\n  constructor(private loaderService: LoaderService) {\r\n\r\n    this.loaderService.isLoading.subscribe((l) => {\r\n      this.isLoading = l;\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IUser } from '../_interfaces/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  baseUrl = environment.apiUrl + 'auth/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n  currentUser: IUser;\r\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\r\n  currentPhotoUrl = this.photoUrl.asObservable();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  changeMemberPhoto(photoUrl: string){\r\n    this.photoUrl.next(photoUrl);\r\n  }\r\n\r\n\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'login', model).pipe(\r\n      map((response: any) => {\r\n        const user = response;\r\n        if (user) {\r\n          localStorage.setItem('token', user.token);\r\n          localStorage.setItem('user', JSON.stringify(user.user));\r\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n          this.currentUser = user.user;\r\n          this.changeMemberPhoto(this.currentUser.photoUrl);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  register(user: IUser) {\r\n    return this.http.post(this.baseUrl + 'register', user);\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = localStorage.getItem('token');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n\r\n  constructor() {  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col\"><h1 class=\"text-center\">Уникално изкуство от раковинки и камъчета</h1></div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n      <div class=\"card\">\r\n        <img class=\"card-img-top\" src=\"../../assets/img-home/1.jpg\" alt=\"Card image\">\r\n        <div class=\"card-img-overlay d-flex justify-content-center\">\r\n          <h3 class=\"card-title text-center\">{{ \"GENERAL.CATEGORY-MIX\" | translate }}</h3>\r\n          <!-- <p class=\"card-text\">Some example text.</p>\r\n          <a href=\"#\" class=\"btn btn-primary\">See Profile</a> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <div class=\"card\" >\r\n        <img class=\"card-img-top\" src=\"../../assets/img-home/2.jpg\" alt=\"Card image\">\r\n        <div class=\"card-img-overlay\">\r\n          <h3 class=\"card-title text-center\">{{ \"GENERAL.CATEGORY-PANELS\" | translate }}</h3>\r\n          <!-- <p class=\"card-text\">Some example text.</p>\r\n          <a href=\"#\" class=\"btn btn-primary\">See Profile</a> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <div class=\"card\" >\r\n        <img class=\"card-img-top\" src=\"../../assets/img-home/3.jpg\" alt=\"Card image\">\r\n        <div class=\"card-img-overlay\">\r\n          <h3 class=\"card-title text-center\">{{ \"GENERAL.CATEGORY-MOSAIC\" | translate }}</h3>\r\n          <!-- <p class=\"card-text\">Some example text.</p>\r\n          <a href=\"#\" class=\"btn btn-primary\">See Profile</a> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- <div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 col-md-4\" id=\"mm\">\r\n      <div class=\"card\">\r\n        <img\r\n          class=\"card-img-top img-fluid\"\r\n          src=\"../../assets/img-home/mariq-maneva.jpg\"\r\n          alt=\"Мariya Maneva – Miriyam\"\r\n        />\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title text-center mt-2\">Мariya Maneva – Miriyam</h5>\r\n        </div>\r\n      </div>\r\n\r\n      <h2 class=\"d-flex justify-content-center mt-3\">\r\n        {{ \"HOME.INTRO-HEADER\" | translate }}\r\n      </h2>\r\n      <p>{{ \"HOME.INTRO-P1\" | translate }}</p>\r\n      <p>{{ \"HOME.INTRO-P1\" | translate }}</p>\r\n    </div>\r\n\r\n    <div class=\"col-12 col-md-8\">\r\n      <div class=\"col-12 home-container\">        \r\n        <h2>{{ \"HOME.MOSAIC-TITLE1\" | translate }}</h2>\r\n        <p>\r\n          <a [routerLink]=\"['/']\"\r\n            ><img\r\n              class=\"pull-left mr-3 img-fluid\"\r\n              src=\"../../assets/img-home/mosaic.jpg\"\r\n              alt='{{ \"HOME.MOSAIC-TITLE1\" | translate }}'              \r\n              width=\"251\"\r\n              height=\"300\"\r\n          /></a>\r\n          {{ \"HOME.MOSAIC-P1\" | translate }}\r\n        </p>\r\n        <p>\r\n          {{ \"HOME.MOSAIC-P2\" | translate }}\r\n        </p>\r\n        <p>\r\n          {{ \"HOME.MOSAIC-P3\" | translate }}\r\n        </p>\r\n      </div>\r\n      <div class=\"col-12 home-container mt-3\">\r\n        <h2>{{ \"HOME.MIXED-TECHNIQUE-TITLE\" | translate }}</h2>\r\n        <p>\r\n          <a href=\"https://pebbleshellart.com/смесена-техника/\"\r\n            ><img\r\n              src=\"../../assets/img-home/mixed_technic.jpg\"\r\n              class=\"pull-left mr-3 img-fluid\"\r\n              alt='{{ \"HOME.MIXED-TECHNIQUE-TITLE\" | translate }}'              \r\n              width=\"400\"\r\n              height=\"213\"\r\n          /></a>\r\n          {{ \"HOME.MIXED-TECHNIQUE-P1\" | translate }}\r\n        </p>\r\n        <p>{{ \"HOME.MIXED-TECHNIQUE-P2\" | translate }}\r\n        </p>\r\n        <p>\r\n          {{ \"HOME.MIXED-TECHNIQUE-P3\" | translate }}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpResponse,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LoaderService } from '../_services/loader.service';\r\n\r\n@Injectable()\r\nexport class LoaderInterceptor implements HttpInterceptor {\r\n  private requests: HttpRequest<any>[] = [];\r\n\r\n  constructor(private loaderService: LoaderService) { }\r\n\r\n  removeRequest(req: HttpRequest<any>) {\r\n    const i = this.requests.indexOf(req);\r\n    if (i >= 0) {\r\n      this.requests.splice(i, 1);\r\n    }\r\n    this.loaderService.isLoading.next(this.requests.length > 0);\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    this.requests.push(req);\r\n\r\n    console.log(\"No of requests--->\" + this.requests.length);\r\n\r\n    this.loaderService.isLoading.next(true);\r\n    return Observable.create(observer => {\r\n      const subscription = next.handle(req)\r\n        .subscribe(\r\n          event => {\r\n            if (event instanceof HttpResponse) {\r\n              this.removeRequest(req);\r\n              observer.next(event);\r\n            }\r\n          },\r\n          err => {\r\n            console.log('error:' + err.statusText);\r\n            this.removeRequest(req);\r\n            observer.error(err);\r\n          },\r\n          () => {\r\n            this.removeRequest(req);\r\n            observer.complete();\r\n          });\r\n      // remove request from queue when cancelled\r\n      return () => {\r\n        this.removeRequest(req);\r\n        subscription.unsubscribe();\r\n      };\r\n    });\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  localhost: 'http://localhost:5000/',\r\n  apiUrl: 'http://localhost:5000/api/',\r\n  frontEndUrl: 'http://localhost:4200/',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ToastService } from '../_services/toast.service';\r\nimport { IPainting } from '../_interfaces/painting';\r\nimport { PaintingService } from '../_services/painting.service';\r\n\r\n\r\n@Injectable()\r\nexport class PaintingsResolver implements Resolve<IPainting[]>{\r\n    pageNumber = 1;\r\n    pageSize = 12;\r\n    paintingParams;\r\n\r\n    constructor(\r\n        private paintingService: PaintingService,\r\n        private router: Router,\r\n        private toast: ToastService) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<IPainting[]> {\r\n        return this.paintingService.getPaintings(this.pageNumber, this.pageSize).pipe(\r\n            catchError(error => {\r\n                this.toast.error('Problem retreiving paintings');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n  toastrOptions: any = {\r\n    \"closeButton\": false,\r\n    \"debug\": false,\r\n    \"newestOnTop\": true,\r\n    \"progressBar\": false,\r\n    \"positionClass\": \"toast-bottom-right\",\r\n    \"preventDuplicates\": false,\r\n    \"onclick\": null,\r\n    \"showDuration\": \"300\",\r\n    \"hideDuration\": \"1000\",\r\n    \"timeOut\": \"5000\",\r\n    \"extendedTimeOut\": \"1000\",\r\n    \"showEasing\": \"swing\",\r\n    \"hideEasing\": \"linear\",\r\n    \"showMethod\": \"fadeIn\",\r\n    \"hideMethod\": \"fadeOut\"\r\n  }\r\n\r\n  constructor(private toastr: ToastrService) { }\r\n\r\n  success(message: string, title?: string,) {\r\n    this.toastr.success(message, title, this.toastrOptions);\r\n    console.log(message);\r\n  }\r\n\r\n  info(message: string, title?: string,) {\r\n    this.toastr.info(message, title, this.toastrOptions);\r\n  }\r\n\r\n  warning(message: string, title?: string,) {\r\n    this.toastr.warning(message, title, this.toastrOptions);\r\n  }\r\n\r\n  error(message: string, title?: string,) {\r\n    this.toastr.error(message, title, this.toastrOptions);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid mt-3\">  \r\n    <footer id=\"colophon\" class=\"text-right pr-5 pt-5\">\r\n      <a [routerLink]=\"['/']\" title=\"Mariya Maneva - Miriyam\" class=\"text-light\"\r\n        >Mariya Maneva - Miriyam</a\r\n      >\r\n    </footer>\r\n  \r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ToastService } from '../_services/toast.service';\r\nimport { PaintingService } from '../_services/painting.service';\r\nimport { IPaintingDetails } from '../_interfaces/painting-details';\r\n\r\n\r\n@Injectable()\r\nexport class PaintingResolver implements Resolve<IPaintingDetails>{\r\n    constructor(\r\n        private paintingService: PaintingService,\r\n        private router: Router,\r\n        private toast: ToastService) { }\r\n                                          \r\n    resolve(route: ActivatedRouteSnapshot): Observable<IPaintingDetails> {\r\n        return this.paintingService.getPainting(route.params['id']).pipe(\r\n            catchError(error => {\r\n                this.toast.error('Problem retreiving painting details');\r\n                this.router.navigate(['/paintings']);\r\n                return of(null);\r\n            })\r\n        )\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { IPaintingDetails } from 'src/app/_interfaces/painting-details';\r\nimport { PaintingService } from 'src/app/_services/painting.service';\r\nimport { ToastService } from 'src/app/_services/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-painting-add',\r\n  templateUrl: './painting-add.component.html',\r\n  styleUrls: ['./painting-add.component.css']\r\n})\r\nexport class PaintingAddComponent implements OnInit {\r\n  paintingModel: FormGroup;\r\n  model: any = {};\r\n  paintingDetails: IPaintingDetails;\r\n  nameMinLen: number = 2;\r\n  nameMaxLen: number = 30;\r\n  descriptionMinLen: number = 10;\r\n  descriptionMaxLen: number = 500;\r\n\r\n  constructor(\r\n    private paintingService: PaintingService,\r\n    fb: FormBuilder,\r\n    private toast: ToastService,) {\r\n\r\n    this.paintingModel = new FormGroup({\r\n      name: new FormControl('', [Validators.required, Validators.minLength(this.nameMinLen), Validators.maxLength(this.nameMaxLen)]),\r\n      description: new FormControl('', [Validators.required, Validators.minLength(this.descriptionMinLen), Validators.maxLength(this.descriptionMaxLen)]),\r\n      nameGb: new FormControl('', [Validators.required, Validators.minLength(this.nameMinLen), Validators.maxLength(this.nameMaxLen)]),\r\n      descriptionGb: new FormControl('', [Validators.required, Validators.minLength(this.descriptionMinLen), Validators.maxLength(this.descriptionMaxLen)]),\r\n      nameDe: new FormControl('', [Validators.required, Validators.minLength(this.nameMinLen), Validators.maxLength(this.nameMaxLen)]),\r\n      descriptionDe: new FormControl('', [Validators.required, Validators.minLength(this.descriptionMinLen), Validators.maxLength(this.descriptionMaxLen)]),\r\n      nameRu: new FormControl('', [Validators.required, Validators.minLength(this.nameMinLen), Validators.maxLength(this.nameMaxLen)]),\r\n      descriptionRu: new FormControl('', [Validators.required, Validators.minLength(this.descriptionMinLen), Validators.maxLength(this.descriptionMaxLen)]),\r\n\r\n      //available: new FormControl('true', [Validators.required]),\r\n      //categoryId: new FormControl(1, [Validators.required]),\r\n      available: new FormControl('', [Validators.required]),\r\n      categoryId: new FormControl('', [Validators.required]),\r\n      sizeX: new FormControl('3', [Validators.required]),\r\n      sizeY: new FormControl('4', [Validators.required]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  addPainting() {\r\n    if (this.paintingModel.valid) {\r\n      this.paintingDetails = Object.assign({}, this.paintingModel.value);\r\n      this.paintingService.addPainting(this.paintingDetails).subscribe(\r\n        (response) => {\r\n          if (response) {\r\n            this.paintingDetails = Object.assign({}, response);\r\n            this.toast.success('Painting added successfully');\r\n          }\r\n        },\r\n        (error) => {\r\n          this.toast.error(error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"container\">\r\n  <form class=\"mb-5\" [formGroup]=\"paintingModel\" (ngSubmit)=\"addPainting()\">\r\n    <h2 class=\"text-center text-primary\">Add Painting</h2>\r\n    <p>Form Status: {{ paintingModel.status | json }}</p>\r\n    <hr />\r\n\r\n    <div class=\"form-group\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm\">\r\n          <div class=\"form-group\">\r\n            <div class=\"form-floating\">\r\n              <select\r\n                class=\"form-select\"\r\n                id=\"floatingSelect\"\r\n                aria-label=\"Floating label select example\"\r\n                formControlName=\"categoryId\"\r\n                [ngClass]=\"{\r\n                  'is-invalid':\r\n                    paintingModel.get('categoryId').errors &&\r\n                    paintingModel.get('categoryId').touched,\r\n                  'is-valid':\r\n                    !paintingModel.get('categoryId').errors &&\r\n                    paintingModel.get('categoryId').statusChanges\r\n                }\"\r\n              >\r\n                <option selected></option>\r\n                <option value=\"1\">Mixed Tehnique</option>\r\n                <option value=\"2\">Sea mosaic</option>\r\n                <option value=\"3\">Marine-themed wall panels</option>\r\n              </select>\r\n              <div class=\"valid-feedback\">Looks good!</div>\r\n              <div class=\"invalid-feedback\">\r\n                Please enter a category for painting\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-sm\">\r\n          <label class=\"control-label\" style=\"margin-right: 10px\"\r\n            >The painting is:\r\n          </label>\r\n          <label class=\"radio-inline\">\r\n            <input\r\n              class=\"mr-3\"\r\n              type=\"radio\"\r\n              value=\"true\"\r\n              formControlName=\"available\"\r\n              name=\"available\"\r\n            />Available\r\n          </label>\r\n          <label class=\"radio-inline ml-3\">\r\n            <input\r\n              class=\"mr-3\"\r\n              type=\"radio\"\r\n              value=\"false\"\r\n              formControlName=\"available\"\r\n              name=\"available\"\r\n            />Unavailable\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-sm\">\r\n        <div class=\"form-group\">\r\n          <input\r\n            appDecimalNumeric\r\n            decimals=\"2\"\r\n            type=\"text\"\r\n            [ngClass]=\"{\r\n              'is-invalid':\r\n                paintingModel.get('sizeX').errors &&\r\n                paintingModel.get('sizeX').touched,\r\n              'is-valid':\r\n                !paintingModel.get('sizeX').errors &&\r\n                paintingModel.get('sizeX').statusChanges\r\n            }\"\r\n            class=\"form-control\"\r\n            formControlName=\"sizeX\"\r\n            placeholder=\"Enter a Width of the painting\"\r\n          />\r\n          <div class=\"valid-feedback\"></div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('sizeX').hasError('required') &&\r\n              paintingModel.get('sizeX').touched\r\n            \"\r\n          >\r\n            Please Enter a Width of the painting\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm\">\r\n        <div class=\"form-group\">\r\n          <input\r\n            appDecimalNumeric\r\n            decimals=\"2\"\r\n            type=\"text\"\r\n            [ngClass]=\"{\r\n              'is-invalid':\r\n                paintingModel.get('sizeY').errors &&\r\n                paintingModel.get('sizeY').touched,\r\n              'is-valid':\r\n                !paintingModel.get('sizeY').errors &&\r\n                paintingModel.get('sizeY').statusChanges\r\n            }\"\r\n            class=\"form-control\"\r\n            formControlName=\"sizeY\"\r\n            placeholder=\"Enter a Height of the painting\"\r\n          />\r\n          <div class=\"valid-feedback\"></div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('sizeY').hasError('required') &&\r\n              paintingModel.get('sizeY').touched\r\n            \"\r\n          >\r\n            Please Enter a Height of the painting\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Bulgarian -->\r\n    <div class=\"row\">\r\n      <div class=\"col-sm\">\r\n        <div class=\"form-group\">\r\n          <h4>Български</h4>\r\n          <input\r\n            type=\"text\"\r\n            [ngClass]=\"{\r\n              'is-invalid':\r\n                paintingModel.get('name').errors &&\r\n                paintingModel.get('name').touched,\r\n              'is-valid':\r\n                !paintingModel.get('name').errors &&\r\n                paintingModel.get('name').statusChanges\r\n            }\"\r\n            class=\"form-control\"\r\n            formControlName=\"name\"\r\n            placeholder=\"Enter a name for painting\"\r\n          />\r\n          <div class=\"valid-feedback\"></div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('name').hasError('required') &&\r\n              paintingModel.get('name').touched\r\n            \"\r\n          >\r\n            Please enter a name for painting\r\n          </div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('name').hasError('minlength') ||\r\n              (paintingModel.get('name').hasError('maxlength') &&\r\n                paintingModel.get('name').touched)\r\n            \"\r\n          >\r\n            Please enter a name between {{ nameMinLen }} and\r\n            {{ nameMaxLen }} characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-sm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            name=\"interests\"\r\n            [ngClass]=\"{\r\n              'is-invalid':\r\n                paintingModel.get('description').errors &&\r\n                paintingModel.get('description').touched,\r\n              'is-valid':\r\n                !paintingModel.get('description').errors &&\r\n                paintingModel.get('description').statusChanges\r\n            }\"\r\n            class=\"form-control\"\r\n            formControlName=\"description\"\r\n            placeholder=\"Enter a description for painting\"\r\n          ></textarea>\r\n          <div class=\"valid-feedback\"></div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('description').hasError('required') &&\r\n              paintingModel.get('description').touched\r\n            \"\r\n          >\r\n            Please enter a description for painting\r\n          </div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('description').hasError('minlength') ||\r\n              (paintingModel.get('description').hasError('maxlength') &&\r\n                paintingModel.get('description').touched)\r\n            \"\r\n          >\r\n            Please enter a description between {{ descriptionMinLen }} and\r\n            {{ descriptionMaxLen }} characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Bulgarian End -->\r\n\r\n    <!-- GreatBritain -->\r\n    <div class=\"row\">\r\n      <div class=\"col-sm\">\r\n        <div class=\"form-group\">\r\n          <h4>Английски</h4>\r\n          <input\r\n            type=\"text\"\r\n            [ngClass]=\"{\r\n              'is-invalid':\r\n                paintingModel.get('nameGb').errors &&\r\n                paintingModel.get('nameGb').touched,\r\n              'is-valid':\r\n                !paintingModel.get('nameGb').errors &&\r\n                paintingModel.get('nameGb').statusChanges\r\n            }\"\r\n            class=\"form-control\"\r\n            formControlName=\"nameGb\"\r\n            placeholder=\"Enter a name for painting\"\r\n          />\r\n          <div class=\"valid-feedback\"></div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('nameGb').hasError('required') &&\r\n              paintingModel.get('nameGb').touched\r\n            \"\r\n          >\r\n            Please enter a name for painting\r\n          </div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('nameGb').hasError('minlength') ||\r\n              (paintingModel.get('nameGb').hasError('maxlength') &&\r\n                paintingModel.get('nameGb').touched)\r\n            \"\r\n          >\r\n            Please enter a name between {{ nameMinLen }} and\r\n            {{ nameMaxLen }} characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-sm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            name=\"interests\"\r\n            [ngClass]=\"{\r\n              'is-invalid':\r\n                paintingModel.get('descriptionGb').errors &&\r\n                paintingModel.get('descriptionGb').touched,\r\n              'is-valid':\r\n                !paintingModel.get('descriptionGb').errors &&\r\n                paintingModel.get('descriptionGb').statusChanges\r\n            }\"\r\n            class=\"form-control\"\r\n            formControlName=\"descriptionGb\"\r\n            placeholder=\"Enter a description for painting\"\r\n          ></textarea>\r\n          <div class=\"valid-feedback\"></div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('descriptionGb').hasError('required') &&\r\n              paintingModel.get('descriptionGb').touched\r\n            \"\r\n          >\r\n            Please enter a description for painting\r\n          </div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('descriptionGb').hasError('minlength') ||\r\n              (paintingModel.get('descriptionGb').hasError('maxlength') &&\r\n                paintingModel.get('descriptionGb').touched)\r\n            \"\r\n          >\r\n            Please enter a description between {{ descriptionMinLen }} and\r\n            {{ descriptionMaxLen }} characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- GreatBritain End -->\r\n\r\n    <!-- Deutschland -->\r\n    <div class=\"row\">\r\n      <div class=\"col-sm\">\r\n        <div class=\"form-group\">\r\n          <h4>Немски</h4>\r\n          <input\r\n            type=\"text\"\r\n            [ngClass]=\"{\r\n              'is-invalid':\r\n                paintingModel.get('nameDe').errors &&\r\n                paintingModel.get('nameDe').touched,\r\n              'is-valid':\r\n                !paintingModel.get('nameDe').errors &&\r\n                paintingModel.get('nameDe').statusChanges\r\n            }\"\r\n            class=\"form-control\"\r\n            formControlName=\"nameDe\"\r\n            placeholder=\"Enter a name for painting\"\r\n          />\r\n          <div class=\"valid-feedback\"></div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('nameDe').hasError('required') &&\r\n              paintingModel.get('nameDe').touched\r\n            \"\r\n          >\r\n            Please enter a name for painting\r\n          </div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('nameDe').hasError('minlength') ||\r\n              (paintingModel.get('nameDe').hasError('maxlength') &&\r\n                paintingModel.get('nameDe').touched)\r\n            \"\r\n          >\r\n            Please enter a name between {{ nameMinLen }} and\r\n            {{ nameMaxLen }} characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-sm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            name=\"interests\"\r\n            [ngClass]=\"{\r\n              'is-invalid':\r\n                paintingModel.get('descriptionDe').errors &&\r\n                paintingModel.get('descriptionDe').touched,\r\n              'is-valid':\r\n                !paintingModel.get('descriptionDe').errors &&\r\n                paintingModel.get('descriptionDe').statusChanges\r\n            }\"\r\n            class=\"form-control\"\r\n            formControlName=\"descriptionDe\"\r\n            placeholder=\"Enter a description for painting\"\r\n          ></textarea>\r\n          <div class=\"valid-feedback\"></div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('descriptionDe').hasError('required') &&\r\n              paintingModel.get('descriptionDe').touched\r\n            \"\r\n          >\r\n            Please enter a description for painting\r\n          </div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('descriptionDe').hasError('minlength') ||\r\n              (paintingModel.get('descriptionDe').hasError('maxlength') &&\r\n                paintingModel.get('descriptionDe').touched)\r\n            \"\r\n          >\r\n            Please enter a description between {{ descriptionMinLen }} and\r\n            {{ descriptionMaxLen }} characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Deutschland End -->\r\n\r\n    <!-- Russian -->\r\n    <div class=\"row\">\r\n      <div class=\"col-sm\">\r\n        <div class=\"form-group\">\r\n          <h4>Руски</h4>\r\n          <input\r\n            type=\"text\"\r\n            [ngClass]=\"{\r\n              'is-invalid':\r\n                paintingModel.get('nameRu').errors &&\r\n                paintingModel.get('nameRu').touched,\r\n              'is-valid':\r\n                !paintingModel.get('nameRu').errors &&\r\n                paintingModel.get('nameRu').statusChanges\r\n            }\"\r\n            class=\"form-control\"\r\n            formControlName=\"nameRu\"\r\n            placeholder=\"Enter a name for painting\"\r\n          />\r\n          <div class=\"valid-feedback\"></div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('nameRu').hasError('required') &&\r\n              paintingModel.get('nameRu').touched\r\n            \"\r\n          >\r\n            Please enter a name for painting\r\n          </div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('nameRu').hasError('minlength') ||\r\n              (paintingModel.get('nameRu').hasError('maxlength') &&\r\n                paintingModel.get('nameRu').touched)\r\n            \"\r\n          >\r\n            Please enter a name between {{ nameMinLen }} and\r\n            {{ nameMaxLen }} characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-sm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            name=\"interests\"\r\n            [ngClass]=\"{\r\n              'is-invalid':\r\n                paintingModel.get('descriptionRu').errors &&\r\n                paintingModel.get('descriptionRu').touched,\r\n              'is-valid':\r\n                !paintingModel.get('descriptionRu').errors &&\r\n                paintingModel.get('descriptionRu').statusChanges\r\n            }\"\r\n            class=\"form-control\"\r\n            formControlName=\"descriptionRu\"\r\n            placeholder=\"Enter a description for painting\"\r\n          ></textarea>\r\n          <div class=\"valid-feedback\"></div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('descriptionRu').hasError('required') &&\r\n              paintingModel.get('descriptionRu').touched\r\n            \"\r\n          >\r\n            Please enter a description for painting\r\n          </div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('descriptionRu').hasError('minlength') ||\r\n              (paintingModel.get('descriptionRu').hasError('maxlength') &&\r\n                paintingModel.get('descriptionRu').touched)\r\n            \"\r\n          >\r\n            Please enter a description between {{ descriptionMinLen }} and\r\n            {{ descriptionMaxLen }} characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Russian End -->\r\n\r\n    <div\r\n      *ngIf=\"paintingDetails?.id == undefined\"\r\n      class=\"form-group text-center\"\r\n    >\r\n      <button\r\n        class=\"btn btn-success\"\r\n        [disabled]=\"!paintingModel.valid\"\r\n        type=\"submit\"\r\n      >\r\n        Save Painting\r\n      </button>\r\n    </div>\r\n  </form>\r\n\r\n  <div *ngIf=\"paintingDetails?.id\">\r\n    <h2 class=\"text-center text-primary\">Upload Images For Painting</h2>\r\n    <hr />\r\n    <app-image-editor [painting]=\"paintingDetails\"></app-image-editor>\r\n  </div>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(\r\n            catchError(error => {\r\n                if (error instanceof HttpErrorResponse) {\r\n                    if(error.status === 404){\r\n                        return throwError('Resource not found');\r\n                    }\r\n                    if (error.status === 401) {\r\n                        return throwError(error.statusText);\r\n                    }\r\n                    const applicationError = error.headers.get('Application-Error');\r\n                    if (applicationError) {\r\n                        return throwError(applicationError);\r\n                    }\r\n                    const serverError = error.error;\r\n                    let modalStateErrors = '';\r\n                    if (serverError.errors && typeof serverError.errors === 'object') {\r\n                        for (const key in serverError.errors) {\r\n                            if (serverError.errors[key]) {\r\n                                modalStateErrors += serverError.errors[key] + '\\n';\r\n                            }\r\n                        }\r\n                    }\r\n                    return throwError(modalStateErrors || serverError || 'Server Error');\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n};\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PaginatedResult, Pagination } from 'src/app/_interfaces/pagination';\r\nimport { IPainting } from 'src/app/_interfaces/painting';\r\nimport { IPaintingDetails } from 'src/app/_interfaces/painting-details';\r\nimport { PaintingService } from 'src/app/_services/painting.service';\r\nimport { ToastService } from 'src/app/_services/toast.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryImageSize, NgxGalleryOptions } from 'ngx-gallery-9';\r\n\r\n@Component({\r\n  selector: 'app-painting-list',\r\n  templateUrl: './painting-list.component.html',\r\n  styleUrls: ['./painting-list.component.css']\r\n})\r\nexport class PaintingListComponent implements OnInit, OnDestroy {\r\n  paintingModal: IPaintingDetails;\r\n  paintings: IPainting[];\r\n  paintingParams: any = {};\r\n  pagination: Pagination;\r\n  baseUrl = environment.localhost;\r\n  categoryModel: any;\r\n  @ViewChild('lgModal') lgModal;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n  languageOnLoad = document.documentElement.lang;\r\n\r\n  constructor(private paintingService: PaintingService,\r\n    private toast: ToastService,\r\n    private route: ActivatedRoute) {\r\n    document.body.style.backgroundColor = \"#A9D3E9\";\r\n  }\r\n\r\n  // ngDoCheck(): void {\r\n  //   if (this.languageOnLoad != document.documentElement.lang) {\r\n  //     this.languageOnLoad = document.documentElement.lang;\r\n  //     this.paintings.length = 0;\r\n  //     this.loadPaintings();\r\n  //   }\r\n  // }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      this.paintings = data['paintings'].result;\r\n      this.pagination = data['paintings'].pagination;\r\n    });\r\n\r\n    // const mainImageIndex = this.paintingModal.images.findIndex(i=> i.isMain === true);\r\n    // console.log(mainImageIndex);\r\n\r\n    this.galleryOptions = [{\r\n      width: '90%',\r\n      height: '80vh',\r\n      imageSize: NgxGalleryImageSize.Contain,\r\n      imageAnimation: NgxGalleryAnimation.Slide,\r\n      thumbnails: false,\r\n      preview: false,\r\n      imageArrowsAutoHide: true,\r\n      arrowNextIcon: 'fa fa-chevron-right',\r\n      arrowPrevIcon: 'fa fa-chevron-left',\r\n      //startIndex: mainImageIndex,\r\n      // thumbnailsAutoHide: true,\r\n      //preview: false,\r\n    },\r\n    // max-width 1300\r\n    {\r\n      breakpoint: 1300,\r\n      width: '100%',\r\n      height: '500px',\r\n      imagePercent: 80,\r\n      thumbnails: false,\r\n      preview: false,\r\n      // thumbnailsAutoHide: true,\r\n    },\r\n    // max-width 580\r\n    {\r\n      breakpoint: 580,\r\n      height: '200px',\r\n      imagePercent: 50,\r\n      preview: false,\r\n    },\r\n    // max-width 400\r\n    {\r\n      breakpoint: 400,\r\n      height: '300px',\r\n      imagePercent: 50,\r\n      thumbnails: false,\r\n      preview: false,\r\n      // thumbnailsAutoHide: true,\r\n    }];\r\n\r\n    // this.galleryOptions = [{\r\n    //   width: '100%',\r\n    //   height: '800px',\r\n    //   imageSize: NgxGalleryImageSize.Contain,\r\n    //   imagePercent: 85,\r\n    //   thumbnailsColumns: 4,\r\n    //   thumbnailSize: NgxGalleryImageSize.Cover,\r\n    //   thumbnailsPercent: 20,\r\n    //   //thumbnailsAutoHide: true, \r\n    //   imageAnimation: NgxGalleryAnimation.Slide,\r\n    //   preview: false,\r\n    // }];\r\n  }\r\n\r\n  getImages() {\r\n    const imageUrls = [];\r\n    this.paintingModal.images.sort((a, b) => a.isMain > b.isMain && -1 || 1);\r\n\r\n    for (let i = 0; i < this.paintingModal.images.length; i++) {\r\n\r\n      let image = {\r\n        small: this.baseUrl + this.paintingModal.images[i].url + '/' + this.paintingModal.images[i].imageFileName,\r\n        medium: this.baseUrl + this.paintingModal.images[i].url + '/' + this.paintingModal.images[i].imageFileName,\r\n        big: this.baseUrl + this.paintingModal.images[i].url + '/' + this.paintingModal.images[i].imageFileName,\r\n        //description: this.paintingModal.images[i].description\r\n      };\r\n\r\n      if (image.small && image.medium && image.big) {\r\n        imageUrls.push(image);\r\n      }\r\n    }\r\n    return imageUrls;\r\n  }\r\n\r\n\r\n  getPainting(id: string) {\r\n    const inchesFactor: number = 0.39370;\r\n\r\n    this.paintingService.getPainting(id).subscribe(data => {\r\n      this.paintingModal = data;\r\n      this.galleryImages = this.getImages();\r\n\r\n\r\n      const currentImageIndex = this.paintings.map(e => e.id).indexOf(this.paintingModal.id);\r\n      this.paintingModal.sizeXIn = +(this.paintingModal.sizeX * inchesFactor).toFixed(1);\r\n      this.paintingModal.sizeYIn = +(this.paintingModal.sizeY * inchesFactor).toFixed(1);;\r\n\r\n      if (currentImageIndex > 0) {\r\n        this.paintingModal.pervImageUrl = this.paintings[currentImageIndex - 1].id;\r\n      }\r\n\r\n      if (currentImageIndex < this.paintings.length - 1) {\r\n        this.paintingModal.nextImageUrl = this.paintings[currentImageIndex + 1].id;\r\n      }\r\n\r\n\r\n      this.paintingModal.url = this.baseUrl + this.paintingModal.url;\r\n      this.lgModal.show();\r\n\r\n      // this.toast.success(JSON.stringify(data));\r\n    },\r\n      // if the error is thrown (or not caught if you do not use catchError) we hit this block\r\n      error => {\r\n        this.toast.error('Problem retreiving painting!');\r\n        // some  code to know error is err_connection_refused\r\n      });\r\n  }\r\n\r\n  onScroll() {\r\n\r\n    if (this.pagination.currentPage > this.pagination.totalPages) {\r\n      return;\r\n    }\r\n\r\n    this.pagination.currentPage++;\r\n    this.loadPaintings();\r\n    console.log(`scrolled!! ${this.pagination.currentPage}`);\r\n\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadPaintings();\r\n  }\r\n\r\n  filterPaintings() {\r\n    this.paintings.length = 0;\r\n    this.pagination.currentPage = 1;\r\n    this.loadPaintings();\r\n  }\r\n\r\n  loadPaintings() {\r\n    this.paintingService.getPaintings(this.pagination.currentPage, this.pagination.itemsPerPage, this.paintingParams)\r\n      .subscribe((res: PaginatedResult<IPainting[]>) => {\r\n        // this.paintings = res.result;\r\n        this.paintings = this.paintings.concat(res.result);\r\n        this.pagination = res.pagination;\r\n      }, error => {\r\n        this.toast.error(error);\r\n      })\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    document.body.style.backgroundColor = \"#ffffff\";\r\n  }\r\n}","<div class=\"container mt-4 mb-5\">\r\n  <div class=\"row d-flex justify-content-between\">\r\n    <div class=\"btn-group mb-3\">\r\n      <label class=\"btn btn-info mr-1\" uncheckable [(ngModel)]=\"this.paintingParams.categoryId\" btnRadio=\"1\"\r\n        tabindex=\"0\" role=\"button\" (click)=\"filterPaintings();\">{{ \"GALLERY.CATEGORY-MIX\" | translate }}</label>\r\n      <label class=\"btn btn-info mr-1\" uncheckable [(ngModel)]=\"this.paintingParams.categoryId\" btnRadio=\"2\"\r\n        tabindex=\"0\" role=\"button\" (click)=\"filterPaintings();\">{{ \"GALLERY.CATEGORY-SEA\" | translate }}</label>\r\n      <label class=\"btn btn-info\" uncheckable [(ngModel)]=\"this.paintingParams.categoryId\" btnRadio=\"3\" tabindex=\"0\"\r\n        role=\"button\" (click)=\"filterPaintings();\">{{ \"GALLERY.CATEGORY-MARINE\" | translate }}</label>\r\n    </div>\r\n\r\n    <div class=\"btn-group mb-3\">\r\n      <label class=\"btn btn-info mr-1\" uncheckable [(ngModel)]=\"this.paintingParams.available\" btnRadio=\"true\"\r\n        tabindex=\"0\" role=\"button\" (click)=\"filterPaintings();\">{{ \"GENERAL.AVAILABLE\" | translate }}</label>\r\n      <label class=\"btn btn-info\" uncheckable [(ngModel)]=\"this.paintingParams.available\" btnRadio=\"false\" tabindex=\"0\"\r\n        role=\"button\" (click)=\"filterPaintings();\">{{ \"GENERAL.UNAVAILABLE\" | translate }}</label>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"row d-flex justify-content-center mt-5\">\r\n    <div *ngFor=\"let painting of paintings\" class=\"col-lg-4 col-md-6 col-sm-12 col-xs-12\" (click)=\"getPainting(painting.id); \">\r\n      <app-thumb [paintingSource]=\"painting\"></app-thumb>\r\n    </div>\r\n\r\n    <div class=\"search-results\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"100\"\r\n      (scrolled)=\"onScroll()\"></div>\r\n  </div>\r\n</div>\r\n\r\n<!-- <div class=\"d-flex justify-content-center\">\r\n  <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\"\r\n    firstText=\"&laquo;\" lastText=\"&raquo;\">\r\n  </pagination>\r\n</div> -->\r\n\r\n<div bsModal #lgModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-sizes-name1\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <li class=\"list-inline-item\">\r\n          <!-- <h4 id=\"dialog-sizes-name1\" class=\"modal-title pull-left\">{{paintingModal?.name}}</h4> -->\r\n          <button class=\"btn btn-primary\" [disabled]=\"!paintingModal?.pervImageUrl\"\r\n            (click)=\"getPainting(paintingModal?.pervImageUrl);\">\r\n            <i class=\"fa fa-arrow-left\"></i>\r\n          </button>\r\n        </li>\r\n        <li class=\"list-inline-item\">\r\n          <button class=\"btn btn-primary\" [disabled]=\"!paintingModal?.nextImageUrl\"\r\n            (click)=\"getPainting(paintingModal?.nextImageUrl);\">\r\n            <i class=\"fa fa-arrow-right\"></i>\r\n          </button>\r\n        </li>\r\n        <button type=\"button\" class=\"close pull-right\" (click)=\"lgModal.hide()\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"row\">\r\n          <!-- <div class=\"col-8\">\r\n            <img class=\"img-fluid mx-auto d-block\" src=\"{{paintingModal?.url}}/{{paintingModal?.imageFileName}}\" alt=\"{{paintingModal?.name}}\">\r\n          </div> -->\r\n          <div class=\"col-lg-8 col-md-12 col-sm-12\">\r\n            <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>\r\n          </div>\r\n          <div class=\"col-lg-4 col-md-12\">\r\n            <div class=\"row justify-content-start\">\r\n              <div class=\"col-12\">\r\n                <h2>{{paintingModal?.name}}</h2>\r\n\r\n                <p><span class=\"bolded\">{{ \"GENERAL.SIZE\" | translate }}:</span> {{paintingModal?.sizeY}} x\r\n                  {{paintingModal?.sizeX}} cm / {{paintingModal?.sizeYIn}} x {{paintingModal?.sizeXIn}} inches</p>\r\n                <p *ngIf=\"paintingModal?.category == 'mixed'\"><span class=\"bolded\">{{ \"GENERAL.TECHNIQUE\" | translate\r\n                    }}: </span> {{ \"GALLERY.CATEGORY-MIX\" | translate }}</p>\r\n                <p *ngIf=\"paintingModal?.category == 'sea'\"><span class=\"bolded\">{{ \"GENERAL.TECHNIQUE\" | translate }}:\r\n                  </span> {{ \"GALLERY.CATEGORY-SEA\" | translate }}</p>\r\n                <p *ngIf=\"paintingModal?.category == 'marine'\"><span class=\"bolded\">{{ \"GENERAL.TECHNIQUE\" | translate\r\n                    }}: </span> {{ \"GALLERY.CATEGORY-MARINE\" | translate }}</p>\r\n                <p *ngIf=\"paintingModal?.available\"><i class=\"fa fa-check-circle\"></i>{{ \"GENERAL.AVAILABLE\" | translate\r\n                  }}</p>\r\n                <p *ngIf=\"!paintingModal?.available\"><i class=\"fa fa-times-circle\"></i>{{ \"GENERAL.UNAVAILABLE\" |\r\n                  translate }}</p>\r\n                <p>{{paintingModal?.description}}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DecimalNumericDirective } from './decimal-numeric.directive';\r\nimport { ModalWindowService } from './_service/modal-window.service';\r\nimport { EditorComponent } from './components/text-editor/editor.component';\r\nimport { NgxEditorModule } from 'ngx-editor';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ImageUploaderComponent } from './components/image-uploader/image-uploader.component';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { ImageService } from './_service/image.service';\r\nimport { InputNameComponent } from './components/input-name/input-name.component';\r\nimport { LoaderComponent } from './components/loader/loader.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DecimalNumericDirective,\r\n    ModalWindowService,\r\n    EditorComponent,\r\n    ImageUploaderComponent,\r\n    InputNameComponent,\r\n    LoaderComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NgxEditorModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FileUploadModule,\r\n  ],\r\n  exports:[\r\n    ModalWindowService,\r\n    DecimalNumericDirective,\r\n    EditorComponent,\r\n    InputNameComponent,\r\n    ImageUploaderComponent,\r\n    LoaderComponent,\r\n  ]\r\n})\r\nexport class SharedModule {\r\n  static forRoot() {\r\n    return {\r\n      ngModule: SharedModule,\r\n      providers: [\r\n        ImageService\r\n      ],\r\n    };\r\n }\r\n }","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { ToastService } from '../_services/toast.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toast: ToastService\r\n  ) { }\r\n\r\n  canActivate(): boolean {\r\n    if(this.authService.loggedIn()){\r\n      return true;\r\n    }\r\n\r\n    this.toast.error('You shall not pass!');\r\n    this.router.navigate(['/home']);\r\n    return false;\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { IImage } from 'src/app/shared/_interfaces/image';\r\nimport { ToastService } from 'src/app/_services/toast.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IEvent } from '../../_interfaces/event';\r\n//import { IEvent } from '../../_interfaces/event';\r\nimport { ImageService } from '../../_service/image.service';\r\n\r\n@Component({\r\n  selector: 'app-image-uploader',\r\n  templateUrl: './image-uploader.component.html',\r\n  styleUrls: ['./image-uploader.component.css'],\r\n  providers: [ImageService],\r\n})\r\nexport class ImageUploaderComponent implements OnInit {\r\n  uploader: FileUploader;\r\n  hasBaseDropZoneOver = false;\r\n  baseUrl = environment.apiUrl;\r\n  localhost = environment.localhost;\r\n  currentMainImage: IImage;\r\n  @Input() event: IEvent;\r\n  \r\n  constructor(private imageService: ImageService, private toast: ToastService ) {   }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUploader();\r\n  }\r\n\r\n  public fileOverBase(e: any): void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n  initializeUploader() {\r\n    //this.event.images = [];\r\n    \r\n    this.uploader = new FileUploader({\r\n      url:\r\n        this.baseUrl +\r\n        'events/' +\r\n        this.event.id +\r\n        '/images',\r\n      authToken: 'Bearer ' + localStorage.getItem('token'),\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024,\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile = (file) => {\r\n      file.withCredentials = false;\r\n    };\r\n\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const res: IImage = JSON.parse(response);\r\n        const image = {\r\n          id: res.id,\r\n          name: res.name,\r\n          url: res.url,\r\n          imageFileName: res.imageFileName,\r\n          isMain: res.isMain,\r\n        };\r\n\r\n        this.event.images.push(image);\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n  setMainImage(image: IImage) {\r\n    this.imageService.setMainImage(this.event.id, image.id)\r\n      .subscribe(\r\n        () => {\r\n          this.currentMainImage = this.event.images.filter((i) => i.isMain === true)[0];\r\n          this.currentMainImage.isMain = false;\r\n          image.isMain = true;\r\n          this.toast.success(`Image ${image.id} is set to main!`)\r\n        },\r\n        (error) => {\r\n          this.toast.error(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  deleteImage(image: IImage) {\r\n\r\n    if (confirm('Are you sure you want to delete this image?')) {\r\n      this.imageService\r\n        .deleteImage(this.event.id, image.id)\r\n        .subscribe(\r\n          () => {\r\n            this.event.images.splice(this.event.images.findIndex((i) => i.id === image.id), 1);\r\n            this.toast.success('Image has been deleted');\r\n          },\r\n          (error) => {\r\n            this.toast.error('Failed to delete image');\r\n          }\r\n        );\r\n    }\r\n  }\r\n}","<div class=\"row mt-3\">\r\n\r\n    <div class=\"col-sm-2 thumb-image\" *ngFor=\"let item of event.images\">\r\n        <img src=\"{{localhost}}{{item.url}}/thumbnail/{{item.imageFileName}}\" class=\"img-thumbnail p-1\" alt=\"\">\r\n        <div class=\"text-center\">\r\n            <button type=\"button\" class=\"btn btn-sm mr-1\"\r\n                [ngClass]=\"item.isMain ? 'btn-success active' : 'btn-secondary'\" [disabled]=\"item.isMain\"\r\n                (click)=\"setMainImage(item)\">Main\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-sm btn-danger\" [disabled]=\"item.isMain\" (click)=\"deleteImage(item)\"><i\r\n                    class=\"fa fa-trash-o\"></i></button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row mt-3\">\r\n    <div class=\"col-md-3\">\r\n        <h3>Add Images</h3>\r\n        <div ng2FileDrop [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\" (fileOver)=\"fileOverBase($event)\"\r\n            [uploader]=\"uploader\" class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\r\n            <i class=\"fa fa-upload fa-3x\"></i>\r\n            Drop Images Here\r\n        </div>\r\n        <div class=\"col-md-1\">\r\n            <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\r\n\r\n        <h3>Upload queue</h3>\r\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\r\n\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th width=\"50%\">Name</th>\r\n                    <th>Size</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let item of uploader.queue\">\r\n                    <td><strong>{{ item?.file?.name }}</strong></td>\r\n                    <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <div>\r\n            <div>\r\n                Queue progress:\r\n                <div class=\"progress mb-4\">\r\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-success btn-s\" (click)=\"uploader.uploadAll()\"\r\n                [disabled]=\"!uploader.getNotUploadedItems().length\">\r\n                <span class=\"fa fa-upload\"></span> Upload\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-warning btn-s\" (click)=\"uploader.cancelAll()\"\r\n                [disabled]=\"!uploader.isUploading\">\r\n                <span class=\"fa fa-ban\"></span> Cancel\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-danger btn-s\" (click)=\"uploader.clearQueue()\"\r\n                [disabled]=\"!uploader.queue.length\">\r\n                <span class=\"fa fa-trash\"></span> Remove\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { IUser } from './_interfaces/user';\r\nimport {\r\n  Event,\r\n  NavigationCancel,\r\n  NavigationEnd,\r\n  NavigationError,\r\n  NavigationStart,\r\n  Router\r\n} from '@angular/router';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  jwtHelper = new JwtHelperService();\r\n  title = \"PS\"\r\n  loading = false;\r\n  \r\n  constructor(private authService: AuthService,private router: Router) { \r\n    this.router.events.subscribe((event: Event) => {\r\n      switch (true) {\r\n        case event instanceof NavigationStart: {\r\n          this.loading = true;\r\n          break;\r\n        }\r\n\r\n        case event instanceof NavigationEnd:\r\n        case event instanceof NavigationCancel:\r\n        case event instanceof NavigationError: {\r\n          this.loading = false;\r\n          break;\r\n        }\r\n        default: {\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const token = localStorage.getItem('token');\r\n    const user: IUser = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (token) {\r\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\r\n    }\r\n\r\n    if (user) {\r\n      this.authService.currentUser = user;\r\n      this.authService.changeMemberPhoto(user.photoUrl);\r\n    }\r\n  }\r\n}\r\n","<app-nav></app-nav>\r\n<app-loader [isLoading]=\"loading\"></app-loader>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { ErrorInterceptorProvider } from './_interceptors/error.interceptor';\r\nimport { appRoutes } from './routes';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { NgxGalleryModule } from 'ngx-gallery-9';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PaintingListComponent } from './paintings/painting-list/painting-list.component';\r\nimport { ThumbComponent } from './paintings/thumb/thumb.component';\r\nimport { CoreModule } from './core/core.module';\r\nimport { PaintingsResolver } from './_resolvers/paintings.resolver';\r\nimport { PaintingDetailsComponent } from './paintings/details/details.component';\r\nimport { PaintingResolver } from './_resolvers/painting.resolver';\r\nimport { PaintingAddComponent } from './paintings/painting-add/painting-add.component';\r\nimport { PaintingEditComponent } from './paintings/edit/edit.component';\r\nimport { ImageEditorComponent } from './paintings/image-editor/image-editor.component';\r\nimport { ModalWindowService } from './shared/_service/modal-window.service';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { NgxEditorModule } from 'ngx-editor';\r\nimport { PaintingEditResolver } from './_resolvers/painting-edit.resolver';\r\nimport { LoaderInterceptor } from './_interceptors/loader-interceptor';\r\nimport { LoaderService } from './_services/loader.service';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    PaintingListComponent,\r\n    ThumbComponent,\r\n    PaintingDetailsComponent,\r\n    PaintingAddComponent,\r\n    PaintingEditComponent,\r\n    ImageEditorComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule, // required animations module\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    ToastrModule.forRoot(), // ToastrModule added\r\n    ModalModule.forRoot(),\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    CollapseModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    InfiniteScrollModule,\r\n    TimeagoModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    BsDropdownModule.forRoot(),\r\n    RouterModule.forRoot(appRoutes),\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        allowedDomains: ['localhost:5000'],\r\n        disallowedRoutes: ['localhost:5000/api/auth'],\r\n      }\r\n    }),\r\n    CoreModule,\r\n    SharedModule,\r\n    NgxEditorModule\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    AuthGuard,\r\n    ErrorInterceptorProvider,\r\n    PaintingsResolver,\r\n    PaintingResolver,\r\n    PaintingEditResolver,\r\n    ModalWindowService,\r\n    TranslateService,\r\n    LoaderService,\r\n    Title,\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\r\n  ],\r\n  exports: [\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n\r\n","import { Routes } from '@angular/router';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PaintingListComponent } from './paintings/painting-list/painting-list.component';\r\nimport { PaintingsResolver } from './_resolvers/paintings.resolver';\r\nimport { PaintingDetailsComponent } from './paintings/details/details.component';\r\nimport { PaintingResolver } from './_resolvers/painting.resolver';\r\nimport { PaintingAddComponent } from './paintings/painting-add/painting-add.component';\r\nimport { PaintingEditResolver } from './_resolvers/painting-edit.resolver';\r\nimport { PaintingEditComponent } from './paintings/edit/edit.component';\r\n\r\n\r\n\r\n\r\nexport const appRoutes: Routes = [\r\n    {\r\n        path: '', component: HomeComponent,\r\n        data: {\r\n            title: 'GENERAL.TITLE'\r\n        }\r\n    }, //home\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: 'paintings', component: PaintingListComponent,\r\n                resolve: { paintings: PaintingsResolver },\r\n                data: {\r\n                    title: 'GENERAL.GALLERY'\r\n                }\r\n            },\r\n            {\r\n                path: 'paintings/add', component: PaintingAddComponent,\r\n                canActivate: [AuthGuard],\r\n                data: {\r\n                    title: 'GENERAL.GALLERY'\r\n                }\r\n            },\r\n            {\r\n                path: 'paintings/edit/:id', component: PaintingEditComponent,\r\n                resolve: { painting: PaintingEditResolver },\r\n                canActivate: [AuthGuard],\r\n                data: {\r\n                    title: 'GENERAL.GALLERY'\r\n                }\r\n            },\r\n            {\r\n                path: 'paintings/:id', component: PaintingDetailsComponent,\r\n                resolve: { painting: PaintingResolver },\r\n                data: {\r\n                    title: 'GENERAL.GALLERY'\r\n                }\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path: 'events',\r\n        loadChildren: () => import('./events/event.module').then(m => m.EventModule)\r\n    },\r\n    {\r\n        path: 'contacts',\r\n        loadChildren: () => import('./contacts/contact.module').then(m => m.ContactsModule)\r\n    },\r\n    {\r\n        path: 'start',\r\n        loadChildren: () => import('./start/start.module').then(m => m.StartModule)\r\n    },\r\n    {\r\n        path: 'members',\r\n        loadChildren: () => import('./members/members.module').then(m => m.MembersModule)\r\n    },\r\n    {\r\n        path: 'admin',\r\n        loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule),\r\n        canActivate: [AuthGuard],\r\n        //     path: '',\r\n        //     runGuardsAndResolvers: 'always',\r\n        //     canActivate: [AuthGuard],\r\n        //     loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule),\r\n        //     resolve: { paintings: AdminPaintingsResolver }\r\n    },\r\n    // {\r\n    //     path: '',\r\n    //     runGuardsAndResolvers: 'always',\r\n    //     canActivate: [AuthGuard],\r\n    //     children: [\r\n    //         {\r\n    //             path: 'admin', component: AdminPaintingListComponent,\r\n    //             resolve: { paintings: AdminPaintingsResolver }\r\n    //         },\r\n    //     ]\r\n    // },\r\n    { path: '**', redirectTo: '', pathMatch: 'full' },\r\n];","\r\nimport { Component, TemplateRef, ViewChild } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'modal-window',\r\n    template:`<ng-template #modalWindow>\r\n    <div class=\"modal-body text-center\">\r\n      <p>Do you want to confirm?</p>\r\n      <button type=\"button\" class=\"btn btn-default\" (click)=\"confirm()\" >Yes</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"decline()\" >No</button>\r\n    </div>\r\n  </ng-template>`\r\n})\r\nexport class ModalWindowService {\r\n  modalRef: BsModalRef;\r\n  message: string;\r\n  // @ViewChild(\"modalWindow\", { static: true }) template: TemplateRef<any>;\r\n\r\n  constructor(private modalService: BsModalService) { }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, { class: 'modal-sm' });\r\n  }\r\n\r\n  confirm(): void {\r\n    this.message = 'Confirmed!';\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  decline(): void {\r\n    this.message = 'Declined!';\r\n    this.modalRef.hide();\r\n  }\r\n}","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appDecimalNumeric]'\n})\nexport class DecimalNumericDirective {\n\n  @Input('decimals') decimals: number = 0;\n\n    private check(value: string, decimals: number)\n    {\n      if (decimals <= 0) {\n        return String(value).match(new RegExp(/^\\d+$/));\n      } else {\n          var regExpString = \"^\\\\s*((\\\\d+(\\\\.\\\\d{0,\" + decimals + \"})?)|((\\\\d*(\\\\.\\\\d{1,\" + decimals + \"}))))\\\\s*$\"\n          return String(value).match(new RegExp(regExpString));\n      }\n    }\n\n    private specialKeys = [ \n      'Backspace', 'Tab', 'End', 'Home', 'ArrowLeft', 'ArrowRight', 'Delete'\n    ];\n\n    constructor(private el: ElementRef) {\n    }\n\n    @HostListener('keydown', [ '$event' ])\n    onKeyDown(event: KeyboardEvent) {\n        if (this.specialKeys.indexOf(event.key) !== -1) {\n            return;\n        }\n        // Do not use event.keycode this is deprecated.\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode\n        let current: string = this.el.nativeElement.value;\n        let next: string = current.concat(event.key);\n        if ( next && !this.check(next, this.decimals) ) {\n           event.preventDefault();\n        }\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { IPaintingDetails } from 'src/app/_interfaces/painting-details';\r\nimport { PaintingService } from 'src/app/_services/painting.service';\r\nimport { ToastService } from 'src/app/_services/toast.service';\r\n\r\n\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-details',\r\n  templateUrl: './details.component.html',\r\n  styleUrls: ['./details.component.css']\r\n})\r\nexport class PaintingDetailsComponent implements OnInit {\r\n  paintingModel: FormGroup;\r\n  paintingDetails: IPaintingDetails;\r\n  nameMinLen: number = 2;\r\n  nameMaxLen: number = 50;\r\n  descriptionMinLen: number = 10;\r\n  descriptionMaxLen: number = 200;\r\n\r\n  constructor(private paintingService: PaintingService,\r\n    private toast: ToastService,\r\n    private route: ActivatedRoute,\r\n    fb: FormBuilder) {\r\n    this.paintingModel = new FormGroup({\r\n      name: new FormControl('', [Validators.required, Validators.minLength(this.nameMinLen), Validators.maxLength(this.nameMaxLen)]),\r\n      description: new FormControl('', [Validators.required, Validators.minLength(this.descriptionMinLen), Validators.maxLength(this.descriptionMaxLen)]),\r\n      available: new FormControl('', [Validators.required]),\r\n      categoryId: new FormControl('', [Validators.required]),\r\n      sizeX: new FormControl('', [Validators.required]),\r\n      sizeY: new FormControl('', [Validators.required]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      // this.toast.success(JSON.stringify(data));\r\n      this.paintingDetails = data['painting'];\r\n      this.paintingModel.controls['name'].setValue(this.paintingDetails.name);\r\n      this.paintingModel.controls['description'].setValue(this.paintingDetails.description);\r\n      this.paintingModel.controls['categoryId'].setValue(this.paintingDetails.categoryId);\r\n      this.paintingModel.controls['available'].setValue(this.paintingDetails.available ? 'true' : 'false');\r\n      this.paintingModel.controls['sizeX'].setValue(this.paintingDetails.sizeX);\r\n      this.paintingModel.controls['sizeY'].setValue(this.paintingDetails.sizeY);\r\n    });\r\n  }\r\n\r\n  updatePainting() {\r\n    if (this.paintingModel.valid) {\r\n      var updatedPainting = Object.assign({}, this.paintingModel.value);\r\n      this.paintingService.updatePainting(this.paintingDetails.id, updatedPainting).subscribe(next => {\r\n        this.toast.success('Painting updated successfully');\r\n      }, error => {\r\n        this.toast.error(error);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <form class=\"mb-5\" [formGroup]=\"paintingModel\" (ngSubmit)=\"updatePainting()\">\r\n      <h2 class=\"text-center text-primary\">Edit Painting</h2>\r\n      \r\n      <hr />\r\n\r\n      <div class=\"form-group\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm\">\r\n            <div class=\"form-group\">\r\n              <div class=\"form-floating\">\r\n                <select\r\n                  class=\"form-select\"\r\n                  id=\"floatingSelect\"\r\n                  aria-label=\"Floating label select example\"\r\n                  formControlName=\"categoryId\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid':\r\n                      paintingModel.get('categoryId').errors &&\r\n                      paintingModel.get('categoryId').touched,\r\n                    'is-valid':\r\n                      !paintingModel.get('categoryId').errors &&\r\n                      paintingModel.get('categoryId').statusChanges\r\n                  }\"\r\n                >\r\n                  <option selected></option>\r\n                  <option value=\"1\">Mixed Tehnique</option>\r\n                  <option value=\"2\">Sea mosaic</option>\r\n                  <option value=\"3\">Marine-themed wall panels</option>\r\n                </select>\r\n                <div class=\"valid-feedback\">Looks good!</div>\r\n                <div class=\"invalid-feedback\">\r\n                  Please enter a category for painting\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-sm\">\r\n            <label class=\"control-label\" style=\"margin-right: 10px\"\r\n              >The painting is:\r\n            </label>\r\n            <label class=\"radio-inline\">\r\n              <input\r\n                class=\"mr-3\"\r\n                type=\"radio\"\r\n                value=\"true\"\r\n                formControlName=\"available\"\r\n              />Available\r\n            </label>\r\n            <label class=\"radio-inline ml-3\">\r\n              <input\r\n                class=\"mr-3\"\r\n                type=\"radio\"\r\n                value=\"false\"\r\n                formControlName=\"available\"\r\n              />Unavailable\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-sm\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              appDecimalNumeric\r\n              decimals=\"2\"\r\n              type=\"text\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  paintingModel.get('sizeX').errors &&\r\n                  paintingModel.get('sizeX').touched,\r\n                'is-valid':\r\n                  !paintingModel.get('sizeX').errors &&\r\n                  paintingModel.get('sizeX').statusChanges\r\n              }\"\r\n              class=\"form-control\"\r\n              formControlName=\"sizeX\"\r\n              placeholder=\"Enter a Width of the painting\"\r\n            />\r\n            <div class=\"valid-feedback\"></div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('sizeX').hasError('required') &&\r\n                paintingModel.get('sizeX').touched\r\n              \"\r\n            >\r\n              Please Enter a Width of the painting\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              appDecimalNumeric\r\n              decimals=\"2\"\r\n              type=\"text\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  paintingModel.get('sizeY').errors &&\r\n                  paintingModel.get('sizeY').touched,\r\n                'is-valid':\r\n                  !paintingModel.get('sizeY').errors &&\r\n                  paintingModel.get('sizeY').statusChanges\r\n              }\"\r\n              class=\"form-control\"\r\n              formControlName=\"sizeY\"\r\n              placeholder=\"Enter a Height of the painting\"\r\n            />\r\n            <div class=\"valid-feedback\"></div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('sizeY').hasError('required') &&\r\n                paintingModel.get('sizeY').touched\r\n              \"\r\n            >\r\n              Please Enter a Height of the painting\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    <!-- Bulgarian -->\r\n    <div class=\"row\">\r\n      <div class=\"col-sm\">\r\n        <div class=\"form-group\">\r\n          <h4>Български</h4>\r\n          <input\r\n            type=\"text\"\r\n            [ngClass]=\"{\r\n              'is-invalid':\r\n                paintingModel.get('name').errors &&\r\n                paintingModel.get('name').touched,\r\n              'is-valid':\r\n                !paintingModel.get('name').errors &&\r\n                paintingModel.get('name').statusChanges\r\n            }\"\r\n            class=\"form-control\"\r\n            formControlName=\"name\"\r\n            placeholder=\"Enter a name for painting\"\r\n          />\r\n          <div class=\"valid-feedback\"></div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('name').hasError('required') &&\r\n              paintingModel.get('name').touched\r\n            \"\r\n          >\r\n            Please enter a name for painting\r\n          </div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('name').hasError('minlength') ||\r\n              (paintingModel.get('name').hasError('maxlength') &&\r\n                paintingModel.get('name').touched)\r\n            \"\r\n          >\r\n            Please enter a name between {{ nameMinLen }} and\r\n            {{ nameMaxLen }} characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-sm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            name=\"interests\"\r\n            [ngClass]=\"{\r\n              'is-invalid':\r\n                paintingModel.get('description').errors &&\r\n                paintingModel.get('description').touched,\r\n              'is-valid':\r\n                !paintingModel.get('description').errors &&\r\n                paintingModel.get('description').statusChanges\r\n            }\"\r\n            class=\"form-control\"\r\n            formControlName=\"description\"\r\n            placeholder=\"Enter a description for painting\"\r\n          ></textarea>\r\n          <div class=\"valid-feedback\"></div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('description').hasError('required') &&\r\n              paintingModel.get('description').touched\r\n            \"\r\n          >\r\n            Please enter a description for painting\r\n          </div>\r\n          <div\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              paintingModel.get('description').hasError('minlength') ||\r\n              (paintingModel.get('description').hasError('maxlength') &&\r\n                paintingModel.get('description').touched)\r\n            \"\r\n          >\r\n            Please enter a description between {{ descriptionMinLen }} and\r\n            {{ descriptionMaxLen }} characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Bulgarian End -->\r\n\r\n\r\n      <div class=\"form-group text-center\">\r\n        <button\r\n          class=\"btn btn-success\"\r\n          [disabled]=\"!paintingModel.valid\"\r\n          type=\"submit\"\r\n        >\r\n          Save Painting\r\n        </button>\r\n      </div>\r\n    </form>\r\n\r\n    <h2 class=\"text-center text-primary\">Upload Images For Painting</h2>\r\n    <hr />\r\n    <app-image-editor [painting]=\"paintingDetails\"></app-image-editor>\r\n\r\n</div>\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginatedResult } from '../_interfaces/pagination';\r\nimport { IPainting } from '../_interfaces/painting';\r\nimport { environment } from 'src/environments/environment';\r\nimport { map } from 'rxjs/operators';\r\nimport { IPaintingDetails } from '../_interfaces/painting-details';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaintingService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService, ) { }\r\n\r\n  getPaintings(page?, itemsPerPage?, paintingParams?): Observable<PaginatedResult<IPainting[]>> {\r\n    const paginatedResult: PaginatedResult<IPainting[]> = new PaginatedResult<IPainting[]>();\r\n\r\n    let params = new HttpParams();\r\n\r\n    if (page != null && itemsPerPage != null) {\r\n      params = params.append('pageNumber', page);\r\n      params = params.append('pageSize', itemsPerPage);\r\n    }\r\n\r\n    if (paintingParams?.categoryId) {\r\n      params = params.append('categoryId', paintingParams.categoryId);\r\n    }\r\n\r\n    if (paintingParams?.available) {\r\n      params = params.append('available', paintingParams.available);\r\n    }\r\n\r\n    if (paintingParams?.name) {\r\n      params = params.append('name', paintingParams.name);\r\n    }\r\n\r\n\r\n    params = params.append('language', localStorage.getItem('currentLang'));\r\n\r\n\r\n    return this.http.get<any[]>(this.baseUrl + 'paintings', { observe: 'response', params })\r\n      .pipe(\r\n        map(response => {\r\n          paginatedResult.result = response.body;\r\n          if (response.headers.get('Pagination') != null) {\r\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'))\r\n          }\r\n          return paginatedResult;\r\n        }));\r\n  }\r\n\r\n  updatePaintingPosition(paintings: IPainting[]): any {\r\n    return this.http.put(this.baseUrl + 'paintings/position', paintings);\r\n  }\r\n\r\n  getPainting(id: string): Observable<IPaintingDetails> {\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('language', localStorage.getItem('currentLang'));\r\n\r\n    return this.http.get<IPaintingDetails>(this.baseUrl + 'paintings/' + id, { observe: 'response', params })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        })\r\n      );\r\n  }\r\n\r\n  editPainting(id: string): Observable<IPaintingDetails> {\r\n\r\n    let params = new HttpParams();\r\n\r\n    return this.http.get<IPaintingDetails>(this.baseUrl + 'paintings/edit/' + id, { observe: 'response' })\r\n      .pipe(\r\n        map(response => {\r\n          return response.body;\r\n        })\r\n      );\r\n  }\r\n\r\n  addPainting(painting: IPaintingDetails): any {\r\n    return this.http.post(this.baseUrl + 'paintings/' + this.authService.decodedToken.nameid, painting);\r\n  }\r\n\r\n  setMainImage(paintingId: string, imageId: string) {\r\n    return this.http.post(this.baseUrl + `paintings/${paintingId}/setMainImage/${imageId}`, {});\r\n  }\r\n\r\n  deleteImage(paintingId: string, imageId: string) {\r\n    return this.http.delete(this.baseUrl + `paintings/${paintingId}/delete/${imageId}`);\r\n  }\r\n\r\n  deletePainting(paintingId: string) {\r\n    return this.http.delete(this.baseUrl + `paintings/${paintingId}/delete`);\r\n  }\r\n\r\n  updatePainting(paintingId: string, painting: IPaintingDetails): any {\r\n    return this.http.put(this.baseUrl + 'paintings/' + paintingId, painting);\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable()\r\nexport class ImageService {\r\n    baseUrl = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    setMainImage(eventId: number, imageId: string) {\r\n        return this.http.post(this.baseUrl + `events/${eventId}/setMainImage/${imageId}`, {});\r\n    }\r\n\r\n    deleteImage(eventId: number, imageId: string) {\r\n        return this.http.delete(this.baseUrl + `events/${eventId}/delete/${imageId}`);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n\r\n  public isLoading = new BehaviorSubject(false);\r\n  constructor() { }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule, Meta } from '@angular/platform-browser';\r\nimport {NgcCookieConsentConfig, NgcCookieConsentModule} from 'ngx-cookieconsent';\r\n\r\nconst cookieConfig:NgcCookieConsentConfig = {\r\n  \"cookie\": {\r\n    \"domain\": \"localhost\"\r\n  },\r\n  \"position\": \"bottom\",\r\n  \"theme\": \"classic\",\r\n  \"palette\": {\r\n    \"popup\": {\r\n      \"background\": \"#21539c\",\r\n      \"text\": \"#ffffff\",\r\n      \"link\": \"#ffffff\"\r\n    },\r\n    \"button\": {\r\n      \"background\": \"#f1d600\",\r\n      \"text\": \"#000000\",\r\n      \"border\": \"transparent\"\r\n    }\r\n  },\r\n  \"type\": \"info\",\r\n  \"content\": {\r\n    \"href\": \"http://localhost:4200\",\r\n  }\r\n};\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NavComponent,\r\n    FooterComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    TabsModule,\r\n    ButtonsModule,\r\n    BsDatepickerModule,\r\n    BsDropdownModule,\r\n    RouterModule,\r\n    CollapseModule,\r\n    TranslateModule.forChild(),\r\n    BrowserModule,\r\n    NgcCookieConsentModule.forRoot(cookieConfig)\r\n  ],\r\n  providers: [Meta],\r\n  exports:[\r\n    NavComponent,\r\n    FooterComponent,\r\n  ]\r\n})\r\nexport class CoreModule { }\r\n","import { Component, OnInit, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { ToastService } from '../../_services/toast.service';\r\nimport { AuthService } from '../../_services/auth.service';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Meta, Title } from '@angular/platform-browser';\r\nimport { NgcCookieConsentService, NgcInitializeEvent, NgcNoCookieLawEvent, NgcStatusChangeEvent } from 'ngx-cookieconsent';\r\nimport { Subscription } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {};\r\n  photoUrl: string;\r\n  selectedLanguage: string;\r\n  languagesToShow: any;\r\n  isCollapsed = true;\r\n  public declarativeFormCaptchaValue: string;\r\n  baseUrl = environment.localhost;\r\n  private currentSiteTitle: string = 'GENERAL.TITLE';\r\n  //keep refs to subscriptions to be able to unsubscribe later\r\n  private popupOpenSubscription: Subscription;\r\n  private popupCloseSubscription: Subscription;\r\n  private initializeSubscription: Subscription;\r\n  private statusChangeSubscription: Subscription;\r\n  private revokeChoiceSubscription: Subscription;\r\n  private noCookieLawSubscription: Subscription;\r\n\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private toast: ToastService,\r\n    public router: Router,\r\n    public translate: TranslateService,\r\n    private renderer: Renderer2,\r\n    private titleService: Title,\r\n    private metaService: Meta,\r\n    private ccService: NgcCookieConsentService,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    translate.addLangs(['gb', 'bg', 'ru', 'de']);\r\n    translate.setDefaultLang('gb');\r\n\r\n    var browserLang = translate.getBrowserLang();\r\n    if (localStorage.getItem('currentLang')) {\r\n      browserLang = localStorage.getItem('currentLang');\r\n      document.documentElement.lang = browserLang;\r\n    }\r\n\r\n    translate.use(browserLang.match(/gb|bg|ru|de/) ? browserLang : 'gb');\r\n    this.selectedLanguage = browserLang;\r\n    this.languagesToShow = translate.getLangs().filter(l => l !== this.selectedLanguage);\r\n    this.renderer.setAttribute(document.querySelector('html'), 'lang', this.selectedLanguage);\r\n\r\n    this.translateCookie();\r\n    this.setMetaTags();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\r\n    this.initCookies();\r\n\r\n    this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n    ).subscribe(() => {\r\n      const rt = this.getChild(this.route);\r\n      rt.data.subscribe(data => {\r\n        this.setSiteTitle(data.title)\r\n      });\r\n    });\r\n  }\r\n\r\n  getChild(activatedRoute: ActivatedRoute) {\r\n    if (activatedRoute.firstChild) {\r\n      return this.getChild(activatedRoute.firstChild);\r\n    } else {\r\n      return activatedRoute;\r\n    }\r\n  }\r\n\r\n  setSiteTitle(newTitle: string) {\r\n    //console.log(this.translate.instant('GENERAL.TITLE'));\r\n    //var test = '\\'' + newTitle + '\\'';\r\n    if (newTitle == null) return;\r\n    \r\n    this.currentSiteTitle = newTitle;\r\n    this.translate.get(newTitle).subscribe((t: string) => {\r\n      this.titleService.setTitle(t);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  login(model) {\r\n    this.authService.login(model).subscribe(next => {\r\n      this.toast.success('Logged in successfully', '');\r\n    }, error => {\r\n      this.toast.error(error);\r\n    }, () => {\r\n      this.router.navigate(['/home']);\r\n    });\r\n  }\r\n\r\n  loggedIn() {\r\n    return this.authService.loggedIn();\r\n  }\r\n\r\n  changeLanguage(lang: string) {\r\n    this.translate.use(lang)\r\n    this.selectedLanguage = lang;\r\n    this.languagesToShow = this.translate.getLangs().filter(l => l !== this.selectedLanguage);\r\n    this.renderer.setAttribute(document.querySelector('html'), 'lang', this.selectedLanguage);\r\n    localStorage.setItem('currentLang', lang);\r\n    document.documentElement.lang = lang;\r\n    //this.router.navigate(['/home']);\r\n    //window.location.reload();\r\n    //window.location.href = window.location.href;\r\n    this.setSiteTitle(this.currentSiteTitle);\r\n    this.translateCookie();\r\n    //window.location.reload();\r\n    //this.router.navigate([window.location.href]);\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    this.toast.info('Logged out');\r\n    this.authService.decodedToken = null;\r\n    this.authService.currentUser = null;\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n  translateCookie() {\r\n    this.translate\r\n      .get(['cookie.header', 'cookie.message', 'cookie.dismiss', 'cookie.allow', 'cookie.deny', 'cookie.link', 'cookie.policy'])\r\n      .subscribe(data => {\r\n\r\n        this.ccService.getConfig().content = this.ccService.getConfig().content || {};\r\n        // Override default messages with the translated ones\r\n        this.ccService.getConfig().content.header = data['cookie.header'];\r\n        this.ccService.getConfig().content.message = data['cookie.message'];\r\n        this.ccService.getConfig().content.dismiss = data['cookie.dismiss'];\r\n        this.ccService.getConfig().content.allow = data['cookie.allow'];\r\n        this.ccService.getConfig().content.deny = data['cookie.deny'];\r\n        this.ccService.getConfig().content.link = data['cookie.link'];\r\n        this.ccService.getConfig().content.policy = data['cookie.policy'];\r\n\r\n        this.ccService.destroy();//remove previous cookie bar (with default messages)\r\n        this.ccService.init(this.ccService.getConfig()); // update config with translated messages\r\n      });\r\n  }\r\n\r\n  setMetaTags() {\r\n    this.translate.get('GENERAL.META-KEYWORDS').subscribe((keywords: string) => {\r\n      //console.log(keywords);\r\n      this.metaService.addTag({ name: 'keywords', keywords });\r\n    });\r\n\r\n    this.translate.get('GENERAL.META-DESCRIPTION').subscribe((description: string) => {\r\n      this.metaService.addTag({ name: 'description', description });\r\n    });\r\n  }\r\n\r\n\r\n  initCookies() {\r\n    // subscribe to cookieconsent observables to react to main events\r\n    this.popupOpenSubscription = this.ccService.popupOpen$.subscribe(\r\n      () => {\r\n        // you can use this.ccService.getConfig() to do stuff...\r\n      });\r\n\r\n    this.popupCloseSubscription = this.ccService.popupClose$.subscribe(\r\n      () => {\r\n        // you can use this.ccService.getConfig() to do stuff...\r\n      });\r\n\r\n    this.initializeSubscription = this.ccService.initialize$.subscribe(\r\n      (event: NgcInitializeEvent) => {\r\n        // you can use this.ccService.getConfig() to do stuff...\r\n      });\r\n\r\n    this.statusChangeSubscription = this.ccService.statusChange$.subscribe(\r\n      (event: NgcStatusChangeEvent) => {\r\n        // you can use this.ccService.getConfig() to do stuff...\r\n      });\r\n\r\n    this.revokeChoiceSubscription = this.ccService.revokeChoice$.subscribe(\r\n      () => {\r\n        // you can use this.ccService.getConfig() to do stuff...\r\n      });\r\n\r\n    this.noCookieLawSubscription = this.ccService.noCookieLaw$.subscribe(\r\n      (event: NgcNoCookieLawEvent) => {\r\n        // you can use this.ccService.getConfig() to do stuff...\r\n      });\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    // unsubscribe to cookieconsent observables to prevent memory leaks\r\n    this.popupOpenSubscription.unsubscribe();\r\n    this.popupCloseSubscription.unsubscribe();\r\n    this.initializeSubscription.unsubscribe();\r\n    this.statusChangeSubscription.unsubscribe();\r\n    this.revokeChoiceSubscription.unsubscribe();\r\n    this.noCookieLawSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","<nav *ngIf=\"router.url == '/start' || loggedIn()\" class=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n  <div class=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n    <ul class=\"navbar-nav ml-auto\">\r\n      <div *ngIf=\"loggedIn()\" class=\"dropdown mr-3\" dropdown>\r\n        <span class=\"mr-1\">\r\n          <img src=\"{{ photoUrl || '../../../assets/user.png' }}\" alt=\"{{ authService.currentUser.username }}\" />\r\n        </span>\r\n        <a class=\"dropdown-toggle\" dropdownToggle text-info>\r\n          Welcome {{ authService.decodedToken?.unique_name | titlecase }}\r\n        </a>\r\n        <div class=\"dropdown-menu mt-1 ml-1\" *dropdownMenu>\r\n          <a class=\"dropdown-item\" [routerLink]=\"['/members/detail-edit']\"><i class=\"fa fa-user\"></i> Edit Profile</a>\r\n          <a class=\"dropdown-item\" [routerLink]=\"['/paintings/add']\"><i class=\"fa fa-paint-brush\"></i> Add Painting</a>          \r\n          <a class=\"dropdown-item\" [routerLink]=\"['/admin']\"><i class=\"fa fa-users\"></i> Administrator</a>          \r\n          <a class=\"dropdown-item\" [routerLink]=\"['/events/add']\"><i class=\"fa fa-paint-brush\"></i> Events Add</a>          \r\n          <a class=\"dropdown-item\" [routerLink]=\"['/start']\"><i class=\"fa fa-play\"></i> Start</a>     \r\n          <a class=\"dropdown-item\" [routerLink]=\"['/members']\"> Members</a>\r\n          <!-- <a class=\"dropdown-item\" [routerLink]=\"['/events/edit']\"><i class=\"fa fa-calendar\"></i> Events Edit</a>      -->\r\n          <div class=\"dropdown-divider\"></div>\r\n          <a class=\"dropdown-item\" (click)=\"logout()\"><i class=\"fa fa-sign-out\"></i> Logout</a>\r\n        </div>\r\n      </div>\r\n\r\n      <form *ngIf=\"!loggedIn()\" #loginForm=\"ngForm\" class=\"form-inline my-2 my-lg-0\"\r\n        (ngSubmit)=\"login(loginForm.value)\">\r\n        <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Username\" name=\"username\" required ngModel\r\n          username />\r\n        <input class=\"form-control mr-sm-2\" type=\"password\" placeholder=\"Password\" name=\"password\" required ngModel\r\n          password />\r\n        <button [disabled]=\"!loginForm.valid\" class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n\r\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-white shadow-sm p-3 mb-3\">\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\"\r\n    aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" (click)=\"isCollapsed = !isCollapsed\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <!-- Collect the nav links, forms, and other content for toggling -->\r\n  <div class=\"collapse navbar-collapse\" [collapse]=\"isCollapsed\">\r\n    <a class=\"navbar-brand\" [routerLink]=\"['/']\">\r\n      <img src=\"../../assets/logo.jpg\" alt=\"logo\" />\r\n    </a>\r\n    <ul class=\"navbar-nav ml-auto\">\r\n      <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">\r\n        <a class=\"nav-link\" [routerLink]=\"['']\">{{ \"NAV.HOME\" | translate }}</a>\r\n      </li>\r\n      <!-- <li class=\"nav-item dropdown\" routerLinkActive=\"active\" dropdown>\r\n        <a class=\"nav-link dropdown-toggle\" dropdownToggle>Members</a>\r\n        <div class=\"dropdown-menu\" *dropdownMenu>\r\n          <a class=\"dropdown-item\" [routerLink]=\"['/members']\">Members</a>\r\n        </div>\r\n      </li> -->\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/paintings']\">{{\r\n          \"NAV.GALLERY\" | translate\r\n          }}</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/events']\">{{\r\n          \"NAV.EVENTS\" | translate\r\n          }}</a>\r\n      </li>\r\n      <li class=\"nav-item\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/contacts']\">{{\r\n          \"NAV.CONTACTS\" | translate\r\n          }}</a>\r\n      </li>\r\n\r\n      <div class=\"dropdown\" dropdown>\r\n        <a class=\"nav-link dropdown-toggle\" role=\"button\" data-toggle=\"dropdown\" type=\"button\" dropdownToggle>\r\n          <span class=\"flag-icon flag-icon-{{ selectedLanguage }}\"></span>{{ \"TRANSLATE.LANGUAGE\" | translate }}\r\n        </a>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\" *dropdownMenu>\r\n          <a *ngFor=\"let lang of languagesToShow\" class=\"dropdown-item\" (click)=\"changeLanguage(lang)\">\r\n            <span class=\"flag-icon flag-icon-{{ lang }}\"></span>{{ \"TRANSLATE.\" + lang | translate }}</a>\r\n        </div>\r\n      </div>\r\n    </ul>\r\n  </div>\r\n\r\n</nav>","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Editor } from \"ngx-editor\";\r\n\r\n@Component({\r\n  selector: 'app-editor',\r\n  templateUrl: './editor.component.html',\r\n  styleUrls: ['./editor.component.css']\r\n})\r\nexport class EditorComponent implements OnInit, OnDestroy {\r\n  editor: Editor;\r\n  html: '';\r\n  @Input() parentForm: FormGroup;\r\n  @Input() conrolName: String;\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.editor = new Editor();\r\n    //this.editorGb = new Editor();\r\n    // this.eventModel = new FormGroup({\r\n        //name: new FormControl('', [FormValidators.required, FormValidators.minLength(2), Validators.maxLength(50)]),\r\n    //    text: new FormControl('', [Validators.required(),Validators.minLength(50)]),\r\n    //   // description: new FormControl('', [FormValidators.required, FormValidators.minLength(10), FormValidators.maxLength(200)]),\r\n    //   //https://joshblf.medium.com/using-child-components-in-angular-forms-d44e60036664\r\n     //});\r\n  }\r\n\r\n  //   keyPress(event: KeyboardEvent) {\r\n  //     console.log(this.html);\r\n  //     event.preventDefault();\r\n  // }\r\n\r\n  // make sure to destory the editor\r\n  ngOnDestroy(): void {\r\n    this.editor.destroy();\r\n  }\r\n}","<form [formGroup]=\"parentForm\">\r\n  <div class=\"NgxEditor__Wrapper mb-5 form-group\">\r\n\r\n      <ngx-editor-menu [editor]=\"editor\"> </ngx-editor-menu>\r\n      <ngx-editor [editor]=\"editor\" formControlName={{conrolName}}></ngx-editor>\r\n\r\n    <!-- <ngx-editor [editor]=\"editor\" [(ngModel)]=\"html\" formControlName=\"text\" (keypress)=\"keyPress($event)\"></ngx-editor> -->\r\n  </div>\r\n<!-- \r\n  <div class=\"NgxEditor__Wrapper mb-5 form-group\">\r\n    <ngx-editor-menu [editor]=editorGb> </ngx-editor-menu>\r\n    <ngx-editor [editor]=editorGb formControlName=\"textGb\"></ngx-editor>\r\n</div> -->\r\n</form>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { IImage } from 'src/app/shared/_interfaces/image';\r\nimport { IPaintingDetails } from 'src/app/_interfaces/painting-details';\r\nimport { PaintingService } from 'src/app/_services/painting.service';\r\nimport { ToastService } from 'src/app/_services/toast.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-image-editor',\r\n  templateUrl: './image-editor.component.html',\r\n  styleUrls: ['./image-editor.component.css']\r\n})\r\nexport class ImageEditorComponent implements OnInit {\r\n  @Input() painting: IPaintingDetails;\r\n  uploader: FileUploader;\r\n  hasBaseDropZoneOver = false;\r\n  baseUrl = environment.apiUrl;\r\n  localhost = environment.localhost;\r\n  currentMainImage: IImage;\r\n\r\n  constructor(private paintingService: PaintingService,\r\n    private toast: ToastService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUploader();\r\n  }\r\n\r\n  public fileOverBase(e: any): void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n  initializeUploader() {\r\n    this.uploader = new FileUploader({\r\n      url:\r\n        this.baseUrl +\r\n        'paintings/' +\r\n        this.painting?.id +\r\n        '/images',\r\n      authToken: 'Bearer ' + localStorage.getItem('token'),\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024,\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile = (file) => {\r\n      file.withCredentials = false;\r\n    };\r\n\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const res: IImage = JSON.parse(response);\r\n        const image = {\r\n          id: res.id,\r\n          name: res.name,\r\n          url: res.url,\r\n          imageFileName: res.imageFileName,\r\n          isMain: res.isMain,\r\n        };\r\n\r\n        this.painting.images.push(image);\r\n      }\r\n    };\r\n  }\r\n\r\n  setMainPhoto(image: IImage) {\r\n    this.paintingService\r\n      .setMainImage(this.painting.id, image.id)\r\n      .subscribe(\r\n        () => {\r\n          this.currentMainImage = this.painting.images.filter((i) => i.isMain === true)[0];\r\n          this.currentMainImage.isMain = false;\r\n          image.isMain = true;\r\n          this.toast.success(`Image ${image.id} isset to main!`)\r\n        },\r\n        (error) => {\r\n          this.toast.error(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  deleteImage(image: IImage) {\r\n\r\n    if (confirm('Are you sure you want to delete this image?')) {\r\n      this.paintingService\r\n        .deleteImage(this.painting.id, image.id)\r\n        .subscribe(\r\n          () => {\r\n            this.painting.images.splice(this.painting.images.findIndex((i) => i.id === image.id), 1);\r\n            this.toast.success('Image has been deleted');\r\n          },\r\n          (error) => {\r\n            this.toast.error('Failed to delete image');\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-sm-2 thumb-image\" *ngFor=\"let image of painting?.images\">\r\n      <img src=\"{{localhost}}{{image.url}}/thumbnail/{{image.imageFileName}}\" class=\"img-thumbnail p-1\" alt=\"\">\r\n      <div class=\"text-center\">\r\n        <button type=\"button\" class=\"btn btn-sm mr-1\" \r\n          [ngClass]=\"image.isMain ? 'btn-success active' : 'btn-secondary'\"\r\n          [disabled]=\"image.isMain\"\r\n          (click)=\"setMainPhoto(image)\">Main\r\n          </button>\r\n        <button type=\"button\" class=\"btn btn-sm btn-danger\" \r\n          [disabled]=\"image.isMain\"\r\n          (click)=\"deleteImage(image)\"><i class=\"fa fa-trash-o\"></i></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"row mt-3\">   \r\n      <div class=\"col-md-3\">  \r\n          <h3>Add Images</h3>  \r\n          <div ng2FileDrop\r\n               [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\r\n               (fileOver)=\"fileOverBase($event)\"\r\n               [uploader]=\"uploader\"\r\n               class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\r\n               <i class=\"fa fa-upload fa-3x\"></i>\r\n              Drop Images Here\r\n          </div>\r\n          <div class=\"col-md-1\">\r\n              <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>  \r\n          </div>\r\n      </div>\r\n  \r\n      <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\r\n  \r\n          <h3>Upload queue</h3>\r\n          <p>Queue length: {{ uploader?.queue?.length }}</p>\r\n  \r\n          <table class=\"table\">\r\n              <thead>\r\n              <tr>\r\n                  <th width=\"50%\">Name</th>\r\n                  <th>Size</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr *ngFor=\"let item of uploader.queue\">\r\n                  <td><strong>{{ item?.file?.name }}</strong></td>\r\n                  <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\r\n              </tr>\r\n              </tbody>\r\n          </table>\r\n  \r\n          <div>\r\n              <div>\r\n                  Queue progress:\r\n                  <div class=\"progress mb-4\">\r\n                      <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\r\n                  </div>\r\n              </div>\r\n              <button type=\"button\" class=\"btn btn-success btn-s\"\r\n                      (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\r\n                  <span class=\"fa fa-upload\"></span> Upload\r\n              </button>\r\n              <button type=\"button\" class=\"btn btn-warning btn-s\"\r\n                      (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\r\n                  <span class=\"fa fa-ban\"></span> Cancel\r\n              </button>\r\n              <button type=\"button\" class=\"btn btn-danger btn-s\"\r\n                      (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\r\n                  <span class=\"fa fa-trash\"></span> Remove\r\n              </button>\r\n          </div>\r\n  \r\n      </div>\r\n  \r\n  </div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ToastService } from '../_services/toast.service';\r\nimport { PaintingService } from '../_services/painting.service';\r\nimport { IPaintingDetails } from '../_interfaces/painting-details';\r\n\r\n\r\n@Injectable()\r\nexport class PaintingEditResolver implements Resolve<IPaintingDetails>{\r\n    constructor(\r\n        private paintingService: PaintingService,\r\n        private router: Router,\r\n        private toast: ToastService) { }\r\n                                          \r\n    resolve(route: ActivatedRouteSnapshot): Observable<IPaintingDetails> {\r\n        return this.paintingService.editPainting(route.params['id']).pipe(\r\n            catchError(error => {\r\n                this.toast.error('Problem retreiving painting editing details');\r\n                this.router.navigate(['/paintings']);\r\n                return of(null);\r\n            })\r\n        )\r\n    }\r\n}","<form [formGroup]=\"parentForm\">\n    <div class=\"row\">\n        <div class=\"col-sm\">\n            <div class=\"form-group\">\n                <input type=\"text\" [ngClass]=\"{\n          'is-invalid':\n          parentForm.get(inputName).errors &&\n          parentForm.get(inputName).touched,\n          'is-valid':\n            !parentForm.get(inputName).errors &&\n            parentForm.get(inputName).statusChanges\n        }\" class=\"form-control\" formControlName={{inputName}} placeholder=\"Enter a name for event\" />\n                <div class=\"valid-feedback\"></div>\n                <div class=\"invalid-feedback\" *ngIf=\"\n          parentForm.get(inputName).hasError('required') &&\n          parentForm.get(inputName).touched\n        \">\n                    Please enter a name for painting\n                </div>\n                <div class=\"invalid-feedback\" *ngIf=\"\n          parentForm.get(inputName).hasError('minlength') ||\n          (parentForm.get(inputName).hasError('maxlength') &&\n            parentForm.get(inputName).touched)\n        \">\n                    Please enter a name between {{nameMinLen}} and {{nameMaxLen}} characters\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-input-name',\n  templateUrl: './input-name.component.html',\n  styleUrls: ['./input-name.component.css']\n})\nexport class InputNameComponent implements OnInit {\n  @Input() parentForm: FormGroup;\n  @Input() inputName: string;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export interface Pagination{\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    result: T;\r\n\r\n    pagination: Pagination; \r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { IPaintingDetails } from 'src/app/_interfaces/painting-details';\r\nimport { PaintingService } from 'src/app/_services/painting.service';\r\nimport { ToastService } from 'src/app/_services/toast.service';\r\n\r\n\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.css']\r\n})\r\nexport class PaintingEditComponent implements OnInit {\r\n  paintingModel: FormGroup;\r\n  paintingDetails: IPaintingDetails;\r\n  nameMinLen: number = 2;\r\n  nameMaxLen: number = 50;\r\n  descriptionMinLen: number = 10;\r\n  descriptionMaxLen: number = 200;\r\n\r\n  constructor(private paintingService: PaintingService,\r\n    private toast: ToastService,\r\n    private route: ActivatedRoute,\r\n    fb: FormBuilder) {\r\n    this.paintingModel = new FormGroup({\r\n      name: new FormControl('', [Validators.required, Validators.minLength(this.nameMinLen), Validators.maxLength(this.nameMaxLen)]),\r\n      description: new FormControl('', [Validators.required, Validators.minLength(this.descriptionMinLen), Validators.maxLength(this.descriptionMaxLen)]),\r\n      nameGb: new FormControl('', [Validators.required, Validators.minLength(this.nameMinLen), Validators.maxLength(this.nameMaxLen)]),\r\n      descriptionGb: new FormControl('', [Validators.required, Validators.minLength(this.descriptionMinLen), Validators.maxLength(this.descriptionMaxLen)]),\r\n      nameDe: new FormControl('', [Validators.required, Validators.minLength(this.nameMinLen), Validators.maxLength(this.nameMaxLen)]),\r\n      descriptionDe: new FormControl('', [Validators.required, Validators.minLength(this.descriptionMinLen), Validators.maxLength(this.descriptionMaxLen)]),\r\n      nameRu: new FormControl('', [Validators.required, Validators.minLength(this.nameMinLen), Validators.maxLength(this.nameMaxLen)]),\r\n      descriptionRu: new FormControl('', [Validators.required, Validators.minLength(this.descriptionMinLen), Validators.maxLength(this.descriptionMaxLen)]),\r\n      available: new FormControl('', [Validators.required]),\r\n      categoryId: new FormControl('', [Validators.required]),\r\n      sizeX: new FormControl('', [Validators.required]),\r\n      sizeY: new FormControl('', [Validators.required]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      this.paintingDetails = data['painting'];\r\n      this.paintingModel.controls['name'].setValue(this.paintingDetails.name);\r\n      this.paintingModel.controls['description'].setValue(this.paintingDetails.description);\r\n      this.paintingModel.controls['nameGb'].setValue(this.paintingDetails.nameGb);\r\n      this.paintingModel.controls['descriptionGb'].setValue(this.paintingDetails.descriptionGb);\r\n      this.paintingModel.controls['nameDe'].setValue(this.paintingDetails.nameDe);\r\n      this.paintingModel.controls['descriptionDe'].setValue(this.paintingDetails.descriptionDe);\r\n      this.paintingModel.controls['nameRu'].setValue(this.paintingDetails.nameRu);\r\n      this.paintingModel.controls['descriptionRu'].setValue(this.paintingDetails.descriptionRu);\r\n      this.paintingModel.controls['categoryId'].setValue(this.paintingDetails.categoryId);\r\n      this.paintingModel.controls['available'].setValue(this.paintingDetails.available ? 'true' : 'false');\r\n      this.paintingModel.controls['sizeX'].setValue(this.paintingDetails.sizeX);\r\n      this.paintingModel.controls['sizeY'].setValue(this.paintingDetails.sizeY);\r\n    });\r\n  }\r\n\r\n  updatePainting() {\r\n    if (this.paintingModel.valid) {\r\n      var updatedPainting = Object.assign({}, this.paintingModel.value);\r\n      this.paintingService.updatePainting(this.paintingDetails.id, updatedPainting).subscribe(next => {\r\n        this.toast.success('Painting updated successfully');\r\n      }, error => {\r\n        this.toast.error(error);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <form class=\"mb-5\" [formGroup]=\"paintingModel\" (ngSubmit)=\"updatePainting()\">\r\n      <a [routerLink]=\"['/admin']\"><i class=\"fa fa-arrow-left\"></i> Back to Admin page</a>\r\n      <h2 class=\"text-center text-primary\">Edit Painting</h2>\r\n      \r\n      <hr />\r\n\r\n      <div class=\"form-group\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm\">\r\n            <div class=\"form-group\">\r\n              <div class=\"form-floating\">\r\n                <select\r\n                  class=\"form-select\"\r\n                  id=\"floatingSelect\"\r\n                  aria-label=\"Floating label select example\"\r\n                  formControlName=\"categoryId\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid':\r\n                      paintingModel.get('categoryId').errors &&\r\n                      paintingModel.get('categoryId').touched,\r\n                    'is-valid':\r\n                      !paintingModel.get('categoryId').errors &&\r\n                      paintingModel.get('categoryId').statusChanges\r\n                  }\"\r\n                >\r\n                  <option selected></option>\r\n                  <option value=\"1\">Mixed Tehnique</option>\r\n                  <option value=\"2\">Sea mosaic</option>\r\n                  <option value=\"3\">Marine-themed wall panels</option>\r\n                </select>\r\n                <div class=\"valid-feedback\">Looks good!</div>\r\n                <div class=\"invalid-feedback\">\r\n                  Please enter a category for painting\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-sm\">\r\n            <label class=\"control-label\" style=\"margin-right: 10px\"\r\n              >The painting is:\r\n            </label>\r\n            <label class=\"radio-inline\">\r\n              <input\r\n                class=\"mr-3\"\r\n                type=\"radio\"\r\n                value=\"true\"\r\n                formControlName=\"available\"\r\n              />Available\r\n            </label>\r\n            <label class=\"radio-inline ml-3\">\r\n              <input\r\n                class=\"mr-3\"\r\n                type=\"radio\"\r\n                value=\"false\"\r\n                formControlName=\"available\"\r\n              />Unavailable\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-sm\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              appDecimalNumeric\r\n              decimals=\"2\"\r\n              type=\"text\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  paintingModel.get('sizeX').errors &&\r\n                  paintingModel.get('sizeX').touched,\r\n                'is-valid':\r\n                  !paintingModel.get('sizeX').errors &&\r\n                  paintingModel.get('sizeX').statusChanges\r\n              }\"\r\n              class=\"form-control\"\r\n              formControlName=\"sizeX\"\r\n              placeholder=\"Enter a Width of the painting\"\r\n            />\r\n            <div class=\"valid-feedback\"></div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('sizeX').hasError('required') &&\r\n                paintingModel.get('sizeX').touched\r\n              \"\r\n            >\r\n              Please Enter a Width of the painting\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              appDecimalNumeric\r\n              decimals=\"2\"\r\n              type=\"text\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  paintingModel.get('sizeY').errors &&\r\n                  paintingModel.get('sizeY').touched,\r\n                'is-valid':\r\n                  !paintingModel.get('sizeY').errors &&\r\n                  paintingModel.get('sizeY').statusChanges\r\n              }\"\r\n              class=\"form-control\"\r\n              formControlName=\"sizeY\"\r\n              placeholder=\"Enter a Height of the painting\"\r\n            />\r\n            <div class=\"valid-feedback\"></div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('sizeY').hasError('required') &&\r\n                paintingModel.get('sizeY').touched\r\n              \"\r\n            >\r\n              Please Enter a Height of the painting\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    <!-- Bulgarian -->\r\n    <div class=\"row\">\r\n        <div class=\"col-sm\">\r\n          <div class=\"form-group\">\r\n            <h4>Български</h4>\r\n            <input\r\n              type=\"text\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  paintingModel.get('name').errors &&\r\n                  paintingModel.get('name').touched,\r\n                'is-valid':\r\n                  !paintingModel.get('name').errors &&\r\n                  paintingModel.get('name').statusChanges\r\n              }\"\r\n              class=\"form-control\"\r\n              formControlName=\"name\"\r\n              placeholder=\"Enter a name for painting\"\r\n            />\r\n            <div class=\"valid-feedback\"></div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('name').hasError('required') &&\r\n                paintingModel.get('name').touched\r\n              \"\r\n            >\r\n              Please enter a name for painting\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('name').hasError('minlength') ||\r\n                (paintingModel.get('name').hasError('maxlength') &&\r\n                  paintingModel.get('name').touched)\r\n              \"\r\n            >\r\n              Please enter a name between {{ nameMinLen }} and\r\n              {{ nameMaxLen }} characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"row\">\r\n        <div class=\"col-sm\">\r\n          <div class=\"form-group\">\r\n            <textarea\r\n              name=\"interests\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  paintingModel.get('description').errors &&\r\n                  paintingModel.get('description').touched,\r\n                'is-valid':\r\n                  !paintingModel.get('description').errors &&\r\n                  paintingModel.get('description').statusChanges\r\n              }\"\r\n              class=\"form-control\"\r\n              formControlName=\"description\"\r\n              placeholder=\"Enter a description for painting\"\r\n            ></textarea>\r\n            <div class=\"valid-feedback\"></div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('description').hasError('required') &&\r\n                paintingModel.get('description').touched\r\n              \"\r\n            >\r\n              Please enter a description for painting\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('description').hasError('minlength') ||\r\n                (paintingModel.get('description').hasError('maxlength') &&\r\n                  paintingModel.get('description').touched)\r\n              \"\r\n            >\r\n              Please enter a description between {{ descriptionMinLen }} and\r\n              {{ descriptionMaxLen }} characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Bulgarian End -->\r\n  \r\n      <!-- GreatBritain -->\r\n      <div class=\"row\">\r\n        <div class=\"col-sm\">\r\n          <div class=\"form-group\">\r\n            <h4>Английски</h4>\r\n            <input\r\n              type=\"text\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  paintingModel.get('nameGb').errors &&\r\n                  paintingModel.get('nameGb').touched,\r\n                'is-valid':\r\n                  !paintingModel.get('nameGb').errors &&\r\n                  paintingModel.get('nameGb').statusChanges\r\n              }\"\r\n              class=\"form-control\"\r\n              formControlName=\"nameGb\"\r\n              placeholder=\"Enter a name for painting\"\r\n            />\r\n            <div class=\"valid-feedback\"></div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('nameGb').hasError('required') &&\r\n                paintingModel.get('nameGb').touched\r\n              \"\r\n            >\r\n              Please enter a name for painting\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('nameGb').hasError('minlength') ||\r\n                (paintingModel.get('nameGb').hasError('maxlength') &&\r\n                  paintingModel.get('nameGb').touched)\r\n              \"\r\n            >\r\n              Please enter a name between {{ nameMinLen }} and\r\n              {{ nameMaxLen }} characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"row\">\r\n        <div class=\"col-sm\">\r\n          <div class=\"form-group\">\r\n            <textarea\r\n              name=\"interests\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  paintingModel.get('descriptionGb').errors &&\r\n                  paintingModel.get('descriptionGb').touched,\r\n                'is-valid':\r\n                  !paintingModel.get('descriptionGb').errors &&\r\n                  paintingModel.get('descriptionGb').statusChanges\r\n              }\"\r\n              class=\"form-control\"\r\n              formControlName=\"descriptionGb\"\r\n              placeholder=\"Enter a description for painting\"\r\n            ></textarea>\r\n            <div class=\"valid-feedback\"></div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('descriptionGb').hasError('required') &&\r\n                paintingModel.get('descriptionGb').touched\r\n              \"\r\n            >\r\n              Please enter a description for painting\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('descriptionGb').hasError('minlength') ||\r\n                (paintingModel.get('descriptionGb').hasError('maxlength') &&\r\n                  paintingModel.get('descriptionGb').touched)\r\n              \"\r\n            >\r\n              Please enter a description between {{ descriptionMinLen }} and\r\n              {{ descriptionMaxLen }} characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- GreatBritain End -->\r\n  \r\n      <!-- Deutschland -->\r\n      <div class=\"row\">\r\n        <div class=\"col-sm\">\r\n          <div class=\"form-group\">\r\n            <h4>Немски</h4>\r\n            <input\r\n              type=\"text\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  paintingModel.get('nameDe').errors &&\r\n                  paintingModel.get('nameDe').touched,\r\n                'is-valid':\r\n                  !paintingModel.get('nameDe').errors &&\r\n                  paintingModel.get('nameDe').statusChanges\r\n              }\"\r\n              class=\"form-control\"\r\n              formControlName=\"nameDe\"\r\n              placeholder=\"Enter a name for painting\"\r\n            />\r\n            <div class=\"valid-feedback\"></div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('nameDe').hasError('required') &&\r\n                paintingModel.get('nameDe').touched\r\n              \"\r\n            >\r\n              Please enter a name for painting\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('nameDe').hasError('minlength') ||\r\n                (paintingModel.get('nameDe').hasError('maxlength') &&\r\n                  paintingModel.get('nameDe').touched)\r\n              \"\r\n            >\r\n              Please enter a name between {{ nameMinLen }} and\r\n              {{ nameMaxLen }} characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"row\">\r\n        <div class=\"col-sm\">\r\n          <div class=\"form-group\">\r\n            <textarea\r\n              name=\"interests\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  paintingModel.get('descriptionDe').errors &&\r\n                  paintingModel.get('descriptionDe').touched,\r\n                'is-valid':\r\n                  !paintingModel.get('descriptionDe').errors &&\r\n                  paintingModel.get('descriptionDe').statusChanges\r\n              }\"\r\n              class=\"form-control\"\r\n              formControlName=\"descriptionDe\"\r\n              placeholder=\"Enter a description for painting\"\r\n            ></textarea>\r\n            <div class=\"valid-feedback\"></div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('descriptionDe').hasError('required') &&\r\n                paintingModel.get('descriptionDe').touched\r\n              \"\r\n            >\r\n              Please enter a description for painting\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('descriptionDe').hasError('minlength') ||\r\n                (paintingModel.get('descriptionDe').hasError('maxlength') &&\r\n                  paintingModel.get('descriptionDe').touched)\r\n              \"\r\n            >\r\n              Please enter a description between {{ descriptionMinLen }} and\r\n              {{ descriptionMaxLen }} characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Deutschland End -->\r\n  \r\n      <!-- Russian -->\r\n      <div class=\"row\">\r\n        <div class=\"col-sm\">\r\n          <div class=\"form-group\">\r\n            <h4>Руски</h4>\r\n            <input\r\n              type=\"text\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  paintingModel.get('nameRu').errors &&\r\n                  paintingModel.get('nameRu').touched,\r\n                'is-valid':\r\n                  !paintingModel.get('nameRu').errors &&\r\n                  paintingModel.get('nameRu').statusChanges\r\n              }\"\r\n              class=\"form-control\"\r\n              formControlName=\"nameRu\"\r\n              placeholder=\"Enter a name for painting\"\r\n            />\r\n            <div class=\"valid-feedback\"></div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('nameRu').hasError('required') &&\r\n                paintingModel.get('nameRu').touched\r\n              \"\r\n            >\r\n              Please enter a name for painting\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('nameRu').hasError('minlength') ||\r\n                (paintingModel.get('nameRu').hasError('maxlength') &&\r\n                  paintingModel.get('nameRu').touched)\r\n              \"\r\n            >\r\n              Please enter a name between {{ nameMinLen }} and\r\n              {{ nameMaxLen }} characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"row\">\r\n        <div class=\"col-sm\">\r\n          <div class=\"form-group\">\r\n            <textarea\r\n              name=\"interests\"\r\n              [ngClass]=\"{\r\n                'is-invalid':\r\n                  paintingModel.get('descriptionRu').errors &&\r\n                  paintingModel.get('descriptionRu').touched,\r\n                'is-valid':\r\n                  !paintingModel.get('descriptionRu').errors &&\r\n                  paintingModel.get('descriptionRu').statusChanges\r\n              }\"\r\n              class=\"form-control\"\r\n              formControlName=\"descriptionRu\"\r\n              placeholder=\"Enter a description for painting\"\r\n            ></textarea>\r\n            <div class=\"valid-feedback\"></div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('descriptionRu').hasError('required') &&\r\n                paintingModel.get('descriptionRu').touched\r\n              \"\r\n            >\r\n              Please enter a description for painting\r\n            </div>\r\n            <div\r\n              class=\"invalid-feedback\"\r\n              *ngIf=\"\r\n                paintingModel.get('descriptionRu').hasError('minlength') ||\r\n                (paintingModel.get('descriptionRu').hasError('maxlength') &&\r\n                  paintingModel.get('descriptionRu').touched)\r\n              \"\r\n            >\r\n              Please enter a description between {{ descriptionMinLen }} and\r\n              {{ descriptionMaxLen }} characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Russian End -->\r\n\r\n\r\n      <div class=\"form-group text-center\">\r\n        <button\r\n          class=\"btn btn-success\"\r\n          [disabled]=\"!paintingModel.valid\"\r\n          type=\"submit\"\r\n        >\r\n          Save Painting\r\n        </button>\r\n      </div>\r\n    </form>\r\n\r\n    <h2 class=\"text-center text-primary\">Upload Images For Painting</h2>\r\n    <hr />\r\n    <app-image-editor [painting]=\"paintingDetails\"></app-image-editor>\r\n\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}